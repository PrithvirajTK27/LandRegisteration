{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\src\\\\views\\\\updateSeller.js\";\nimport React, { Component } from 'react';\nimport Land from \"../artifacts/Land.json\";\nimport getWeb3 from \"../getWeb3\";\nimport '../index.css';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { DrizzleProvider } from 'drizzle-react';\nimport { Table, Spinner } from 'react-bootstrap';\nimport { Button, Card, CardHeader, CardBody, CardFooter, CardText, FormGroup, Form, Input, Row, Col } from \"reactstrap\";\nimport { LoadingContainer, AccountData, ContractData, ContractForm } from 'drizzle-react-components';\nvar drizzleOptions = {\n  contracts: [Land] // var buyers = 0;\n  // var sellers = 0;\n\n};\nvar seller;\nvar sellerTable = [];\nvar verification = [];\n\nvar updateSeller =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(updateSeller, _Component);\n\n  function updateSeller(props) {\n    var _this;\n\n    _classCallCheck(this, updateSeller);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(updateSeller).call(this, props));\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var web3, accounts, currentAddress, networkId, deployedNetwork, instance, seller_verify, not_verify;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //For refreshing page only once\n              if (!window.location.hash) {\n                window.location = window.location + '#loaded';\n                window.location.reload();\n              }\n\n              _context.prev = 1;\n              _context.next = 4;\n              return getWeb3();\n\n            case 4:\n              web3 = _context.sent;\n              _context.next = 7;\n              return web3.eth.getAccounts();\n\n            case 7:\n              accounts = _context.sent;\n              _context.next = 10;\n              return web3.currentProvider.selectedAddress;\n\n            case 10:\n              currentAddress = _context.sent;\n              console.log(currentAddress);\n              _context.next = 14;\n              return web3.eth.net.getId();\n\n            case 14:\n              networkId = _context.sent;\n              deployedNetwork = Land.networks[networkId];\n              instance = new web3.eth.Contract(Land.abi, deployedNetwork && deployedNetwork.address);\n\n              _this.setState({\n                LandInstance: instance,\n                web3: web3,\n                account: accounts[0]\n              });\n\n              _this.setState({\n                address: currentAddress\n              });\n\n              _context.next = 21;\n              return _this.state.LandInstance.methods.isVerified(currentAddress).call();\n\n            case 21:\n              seller_verify = _context.sent;\n              console.log(seller_verify);\n              _context.next = 25;\n              return _this.state.LandInstance.methods.isRejected(currentAddress).call();\n\n            case 25:\n              not_verify = _context.sent;\n              console.log(not_verify);\n\n              if (seller_verify) {\n                verification.push(React.createElement(\"p\", {\n                  id: \"verified\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 91\n                  },\n                  __self: this\n                }, \"Verified \", React.createElement(\"i\", {\n                  class: \"fas fa-user-check\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 91\n                  },\n                  __self: this\n                })));\n              } else if (not_verify) {\n                verification.push(React.createElement(\"p\", {\n                  id: \"rejected\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 93\n                  },\n                  __self: this\n                }, \"Rejected \", React.createElement(\"i\", {\n                  class: \"fas fa-user-times\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 93\n                  },\n                  __self: this\n                })));\n              } else {\n                verification.push(React.createElement(\"p\", {\n                  id: \"unknown\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 95\n                  },\n                  __self: this\n                }, \"Not Yet Verified \", React.createElement(\"i\", {\n                  class: \"fas fa-user-cog\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 95\n                  },\n                  __self: this\n                })));\n              }\n\n              _context.next = 30;\n              return _this.state.LandInstance.methods.getSellerDetails(currentAddress).call();\n\n            case 30:\n              seller = _context.sent;\n              console.log(seller);\n              console.log(seller[0]);\n\n              _this.setState({\n                name: seller[0],\n                age: seller[1],\n                aadharNumber: seller[2],\n                panNumber: seller[3],\n                landsOwned: seller[4]\n              }); //sellerTable.push(<div><p>Name: {seller[0]}</p><p>Age: {seller[1]}</p><p>Aadhar Number: {seller[2]}</p><p>Pan Number: {seller[3]}</p><p>Owned Lands: {seller[4]}</p></div>);\n\n\n              sellerTable.push(React.createElement(Row, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 104\n                },\n                __self: this\n              }, React.createElement(Col, {\n                md: \"12\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 105\n                },\n                __self: this\n              }, React.createElement(FormGroup, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 106\n                },\n                __self: this\n              }, React.createElement(\"label\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 107\n                },\n                __self: this\n              }, \"Your Wallet Address: \"), React.createElement(Input, {\n                disabled: true,\n                type: \"text\",\n                value: currentAddress,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 108\n                },\n                __self: this\n              })))));\n              _context.next = 41;\n              break;\n\n            case 37:\n              _context.prev = 37;\n              _context.t0 = _context[\"catch\"](1);\n              // Catch any errors for any of the above operations.\n              alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n              console.error(_context.t0);\n\n            case 41:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[1, 37]]);\n    }));\n    _this.updateSeller =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(_this.state.name == '' || _this.state.age == '' || _this.state.aadharNumber == '' || _this.state.panNumber == '' || _this.state.landsOwned == '')) {\n                _context2.next = 4;\n                break;\n              }\n\n              alert(\"All the fields are compulsory!\");\n              _context2.next = 19;\n              break;\n\n            case 4:\n              if (!(_this.state.aadharNumber.length != 12)) {\n                _context2.next = 8;\n                break;\n              }\n\n              alert(\"Aadhar Number should be 12 digits long!\");\n              _context2.next = 19;\n              break;\n\n            case 8:\n              if (!(_this.state.panNumber.length != 10)) {\n                _context2.next = 12;\n                break;\n              }\n\n              alert(\"Pan Number should be a 10 digit unique number!\");\n              _context2.next = 19;\n              break;\n\n            case 12:\n              if (Number(_this.state.age)) {\n                _context2.next = 16;\n                break;\n              }\n\n              alert(\"Your age must be a number\");\n              _context2.next = 19;\n              break;\n\n            case 16:\n              _context2.next = 18;\n              return _this.state.LandInstance.methods.updateSeller(_this.state.name, _this.state.age, _this.state.aadharNumber, _this.state.panNumber, _this.state.landsOwned).send({\n                from: _this.state.address,\n                gas: 2100000\n              }).then(function (response) {\n                _this.props.history.push(\"/Seller/sellerProfile\");\n              });\n\n            case 18:\n              //Reload\n              window.location.reload(false);\n\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    _this.updateName = function (event) {\n      return _this.setState({\n        name: event.target.value\n      });\n    };\n\n    _this.updateAge = function (event) {\n      return _this.setState({\n        age: event.target.value\n      });\n    };\n\n    _this.updateAadhar = function (event) {\n      return _this.setState({\n        aadharNumber: event.target.value\n      });\n    };\n\n    _this.updatePan = function (event) {\n      return _this.setState({\n        panNumber: event.target.value\n      });\n    };\n\n    _this.updateOwnedLands = function (event) {\n      return _this.setState({\n        landsOwned: event.target.value\n      });\n    };\n\n    _this.state = {\n      LandInstance: undefined,\n      account: null,\n      web3: null,\n      buyers: 0,\n      sellers: 0,\n      address: '',\n      name: '',\n      age: '',\n      aadharNumber: '',\n      panNumber: '',\n      landsOwned: '',\n      isVerified: false,\n      verified: ''\n    };\n    return _this;\n  }\n\n  _createClass(updateSeller, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.state.web3) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, React.createElement(Spinner, {\n          animation: \"border\",\n          variant: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }))));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(DrizzleProvider, {\n        options: drizzleOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(LoadingContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Seller Profile\"), React.createElement(\"h5\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, verification)), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, sellerTable, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Input, {\n        type: \"text\",\n        value: this.state.name,\n        onChange: this.updateName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Age\"), React.createElement(Input, {\n        type: \"text\",\n        value: this.state.age,\n        onChange: this.updateAge,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Aadhar Number\"), React.createElement(Input, {\n        type: \"text\",\n        value: this.state.aadharNumber,\n        onChange: this.updateAadhar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"Pan Number\"), React.createElement(Input, {\n        type: \"text\",\n        value: this.state.panNumber,\n        onChange: this.updatePan,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"Owned Lands\"), React.createElement(Input, {\n        type: \"text\",\n        value: this.state.landsOwned,\n        onChange: this.updateOwnedLands,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      })))))), React.createElement(CardFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.updateSeller,\n        className: \"btn-fill\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"Update\"))))))));\n    }\n  }]);\n\n  return updateSeller;\n}(Component);\n\nexport default updateSeller;","map":{"version":3,"sources":["C:\\Users\\prith\\Desktop\\New folder (5)\\starter_kit-master\\LandRegisteration\\src\\views\\updateSeller.js"],"names":["React","Component","Land","getWeb3","DrizzleProvider","Table","Spinner","Button","Card","CardHeader","CardBody","CardFooter","CardText","FormGroup","Form","Input","Row","Col","LoadingContainer","AccountData","ContractData","ContractForm","drizzleOptions","contracts","seller","sellerTable","verification","updateSeller","props","componentDidMount","window","location","hash","reload","web3","eth","getAccounts","accounts","currentProvider","selectedAddress","currentAddress","console","log","net","getId","networkId","deployedNetwork","networks","instance","Contract","abi","address","setState","LandInstance","account","state","methods","isVerified","call","seller_verify","isRejected","not_verify","push","getSellerDetails","name","age","aadharNumber","panNumber","landsOwned","alert","error","length","Number","send","from","gas","then","response","history","updateName","event","target","value","updateAge","updateAadhar","updatePan","updateOwnedLands","undefined","buyers","sellers","verified"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport Land from \"../artifacts/Land.json\"\nimport getWeb3 from \"../getWeb3\"\n\nimport '../index.css';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { DrizzleProvider } from 'drizzle-react';\nimport { Table, Spinner } from 'react-bootstrap';\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    CardFooter,\n    CardText,\n    FormGroup,\n    Form,\n    Input,\n    Row,\n    Col,\n  } from \"reactstrap\";\n\nimport {\n    LoadingContainer,\n    AccountData,\n    ContractData,\n    ContractForm\n} from 'drizzle-react-components'\n\nconst drizzleOptions = {\n    contracts: [Land]\n}\n\n// var buyers = 0;\n// var sellers = 0;\nvar seller;\nvar sellerTable = [];\nvar verification = [];\n\nclass updateSeller extends Component {\n    constructor(props){\n        super(props)\n\n        this.state = {\n            LandInstance: undefined,\n            account: null,\n            web3: null,\n            buyers: 0,\n            sellers: 0,\n            address: '',\n            name: '',\n            age: '',\n            aadharNumber: '',\n            panNumber: '',\n            landsOwned: '',\n            isVerified: false,\n            verified: '',\n        }\n    }\n\n    componentDidMount = async () => {\n        //For refreshing page only once\n        if(!window.location.hash){\n            window.location = window.location + '#loaded';\n            window.location.reload();\n        }\n\n        try{\n            //Get network provider and web3 instance\n            const web3 = await getWeb3();\n\n            const accounts = await web3.eth.getAccounts();\n\n            const currentAddress = await web3.currentProvider.selectedAddress;\n            console.log(currentAddress);\n            const networkId = await web3.eth.net.getId();\n            const deployedNetwork = Land.networks[networkId];\n            const instance = new web3.eth.Contract(\n                Land.abi,\n                deployedNetwork && deployedNetwork.address,\n            );\n\n            this.setState({ LandInstance: instance, web3: web3, account: accounts[0] });\n            this.setState({address: currentAddress});\n            var seller_verify = await this.state.LandInstance.methods.isVerified(currentAddress).call();\n            console.log(seller_verify);\n                \n            var not_verify = await this.state.LandInstance.methods.isRejected(currentAddress).call();\n            console.log(not_verify);\n            if(seller_verify){\n              verification.push(<p id = \"verified\">Verified <i class=\"fas fa-user-check\"></i></p>);\n            }else if(not_verify){\n              verification.push(<p  id = \"rejected\">Rejected <i class=\"fas fa-user-times\"></i></p>);\n            }else{\n              verification.push(<p id = \"unknown\">Not Yet Verified <i class=\"fas fa-user-cog\"></i></p>);\n            }\n\n            seller = await this.state.LandInstance.methods.getSellerDetails(currentAddress).call();\n            console.log(seller);\n            console.log(seller[0]);\n            this.setState({name: seller[0], age: seller[1], aadharNumber: seller[2], panNumber: seller[3], landsOwned: seller[4]});\n            //sellerTable.push(<div><p>Name: {seller[0]}</p><p>Age: {seller[1]}</p><p>Aadhar Number: {seller[2]}</p><p>Pan Number: {seller[3]}</p><p>Owned Lands: {seller[4]}</p></div>);\n              sellerTable.push(\n              <Row>\n                <Col md=\"12\">\n                  <FormGroup>\n                    <label>Your Wallet Address: </label>\n                    <Input\n                      disabled\n                      type=\"text\"\n                      value={currentAddress}\n                    />\n                  </FormGroup>\n                </Col>\n              </Row>\n              );  \n\n        }catch (error) {\n            // Catch any errors for any of the above operations.\n            alert(\n              `Failed to load web3, accounts, or contract. Check console for details.`,\n            );\n            console.error(error);\n          }\n    };\n\n    updateSeller = async () => {\n        if (this.state.name == '' || this.state.age == '' || this.state.aadharNumber == '' || this.state.panNumber == '' || this.state.landsOwned == '') {\n            alert(\"All the fields are compulsory!\");\n        } else if (this.state.aadharNumber.length != 12) {\n            alert(\"Aadhar Number should be 12 digits long!\");\n        } else if (this.state.panNumber.length != 10) {\n            alert(\"Pan Number should be a 10 digit unique number!\");\n        } else if (!Number(this.state.age)) {\n            alert(\"Your age must be a number\");\n        } else {\n            await this.state.LandInstance.methods.updateSeller(\n                this.state.name,\n                this.state.age,\n                this.state.aadharNumber,\n                this.state.panNumber,\n                this.state.landsOwned, \n                )\n                .send({\n                    from: this.state.address,\n                    gas: 2100000\n                }).then(response => {\n                    this.props.history.push(\"/Seller/sellerProfile\");\n                });\n\n            //Reload\n            window.location.reload(false);\n        }\n    }\n\n    updateName = event => (\n        this.setState({ name: event.target.value })\n    )\n    updateAge = event => (\n        this.setState({ age: event.target.value })\n    )\n    updateAadhar = event => (\n        this.setState({ aadharNumber: event.target.value })\n    )\n    updatePan = event => (\n        this.setState({ panNumber: event.target.value })\n    )\n    updateOwnedLands = event => (\n        this.setState({ landsOwned: event.target.value })\n    )\n\n    render() {\n        if (!this.state.web3) {\n        return (\n            <div>\n            <div>\n                <h1>\n                <Spinner animation=\"border\" variant=\"primary\" />\n                </h1>\n            </div>\n            \n            </div>\n        );\n        }\n\n        return (\n            <div className=\"content\">\n            <DrizzleProvider options={drizzleOptions}>\n            <LoadingContainer>\n                        <Row>\n                            <Col md=\"8\">\n                                <Card>\n                                    <CardHeader>\n                                        <h5 className=\"title\">Seller Profile</h5>\n                                        <h5 className=\"title\">{verification}</h5>\n\n                                    </CardHeader>\n                                    <CardBody>\n                                        <Form>\n                                            {sellerTable}\n                                            <Row>\n                                                <Col md=\"12\">\n                                                    <FormGroup>\n                                                        <label>Name</label>\n                                                        <Input\n                                                            type=\"text\"\n                                                            value={this.state.name}\n                                                            onChange={this.updateName}\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col md=\"12\">\n                                                    <FormGroup>\n                                                        <label>Age</label>\n                                                        <Input\n                                                            type=\"text\"\n                                                            value={this.state.age}\n                                                            onChange={this.updateAge}\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col md=\"12\">\n                                                    <FormGroup>\n                                                        <label>Aadhar Number</label>\n                                                        <Input\n                                                            type=\"text\"\n                                                            value={this.state.aadharNumber}\n                                                            onChange={this.updateAadhar}\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col md=\"12\">\n                                                    <FormGroup>\n                                                        <label>Pan Number</label>\n                                                        <Input\n                                                            type=\"text\"\n                                                            value={this.state.panNumber}\n                                                            onChange={this.updatePan}\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col md=\"12\">\n                                                    <FormGroup>\n                                                        <label>Owned Lands</label>\n                                                        <Input\n                                                            type=\"text\"\n                                                            value={this.state.landsOwned}\n                                                            onChange={this.updateOwnedLands}\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                        </Form>\n                                    </CardBody>\n                                    <CardFooter>\n                                        <Button onClick={this.updateSeller} className=\"btn-fill\" color=\"primary\">\n                                            Update\n                                        </Button>\n                                    </CardFooter>\n                                </Card>\n                            </Col>\n                        </Row>\n            </LoadingContainer>\n            </DrizzleProvider>\n            </div>\n        );\n\n    }    \n}\n\nexport default updateSeller;"]},"metadata":{},"sourceType":"module"}