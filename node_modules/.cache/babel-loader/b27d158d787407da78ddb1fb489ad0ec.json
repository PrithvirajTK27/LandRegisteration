{"ast":null,"code":"var durationRE = /(\\x2D?(?:[0-9]+\\.?[0-9]*|[0-9]*\\.?[0-9]+)(?:e[\\+\\x2D]?[0-9]+)?)[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*([Lp\\{\\}]*)/ig;\n/**\r\n * conversion ratios\r\n */\n\nparse.nanosecond = parse.ns = 1 / 1e6;\nparse['µs'] = parse['μs'] = parse.us = parse.microsecond = 1 / 1e3;\nparse.millisecond = parse.ms = parse[''] = 1;\nparse.second = parse.sec = parse.s = parse.ms * 1000;\nparse.minute = parse.min = parse.m = parse.s * 60;\nparse.hour = parse.hr = parse.h = parse.m * 60;\nparse.day = parse.d = parse.h * 24;\nparse.week = parse.wk = parse.w = parse.d * 7;\nparse.month = parse.b = parse.d * (365.25 / 12);\nparse.year = parse.yr = parse.y = parse.d * 365.25;\n/**\r\n * convert `str` to ms\r\n *\r\n * @param {String} str\r\n * @param {String} format\r\n * @return {Number}\r\n */\n\nfunction parse() {\n  var str = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'ms';\n  var result = null; // ignore commas/placeholders\n\n  str = (str + '').replace(/(\\d)[,_](\\d)/g, '$1$2');\n  str.replace(durationRE, function (_, n, units) {\n    units = unitRatio(units);\n    if (units) result = (result || 0) + parseFloat(n, 10) * units;\n  });\n  return result && result / (unitRatio(format) || 1);\n}\n\nfunction unitRatio(str) {\n  return parse[str] || parse[str.toLowerCase().replace(/s$/, '')];\n}\n\nexport default parse;","map":null,"metadata":{},"sourceType":"module"}