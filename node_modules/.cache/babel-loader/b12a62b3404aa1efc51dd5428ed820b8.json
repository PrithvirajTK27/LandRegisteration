{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _objectSpread = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar _asyncIterator = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncIterator\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar debug = require('debug');\n\nvar configure = require('../lib/configure.js');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nvar httpRpcWireFormat = require('../lib/http-rpc-wire-format.js');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar debug__default =\n/*#__PURE__*/\n_interopDefaultLegacy(debug);\n\nvar log = debug__default[\"default\"]('ipfs-http-client:pubsub:subscribe');\n\nvar createSubscribe = function createSubscribe(options, subsTracker) {\n  return configure.configure(function (api) {\n    function subscribe(_x, _x2) {\n      return _subscribe.apply(this, arguments);\n    }\n\n    function _subscribe() {\n      _subscribe = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(topic, handler) {\n        var options,\n            done,\n            fail,\n            result,\n            ffWorkaround,\n            _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n                options.signal = subsTracker.subscribe(topic, handler, options.signal);\n                result = new Promise(function (resolve, reject) {\n                  done = resolve;\n                  fail = reject;\n                });\n                ffWorkaround = setTimeout(function () {\n                  return done();\n                }, 1000);\n                api.post('pubsub/sub', {\n                  signal: options.signal,\n                  searchParams: toUrlSearchParams.toUrlSearchParams(_objectSpread({\n                    arg: httpRpcWireFormat.textToUrlSafeRpc(topic)\n                  }, options)),\n                  headers: options.headers\n                }).catch(function (err) {\n                  subsTracker.unsubscribe(topic, handler);\n                  fail(err);\n                }).then(function (response) {\n                  clearTimeout(ffWorkaround);\n\n                  if (!response) {\n                    return;\n                  }\n\n                  readMessages(response, {\n                    onMessage: handler,\n                    onEnd: function onEnd() {\n                      return subsTracker.unsubscribe(topic, handler);\n                    },\n                    onError: options.onError\n                  });\n                  done();\n                });\n                return _context.abrupt(\"return\", result);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _subscribe.apply(this, arguments);\n    }\n\n    return subscribe;\n  })(options);\n};\n\nfunction readMessages(_x3, _x4) {\n  return _readMessages.apply(this, arguments);\n}\n\nfunction _readMessages() {\n  _readMessages = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(response, _ref) {\n    var onMessage, onEnd, onError, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, msg;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            onMessage = _ref.onMessage, onEnd = _ref.onEnd, onError = _ref.onError;\n            onError = onError || log;\n            _context2.prev = 2;\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _context2.prev = 5;\n            _iterator = _asyncIterator(response.ndjson());\n\n          case 7:\n            _context2.next = 9;\n            return _iterator.next();\n\n          case 9:\n            _step = _context2.sent;\n            _iteratorNormalCompletion = _step.done;\n            _context2.next = 13;\n            return _step.value;\n\n          case 13:\n            _value = _context2.sent;\n\n            if (_iteratorNormalCompletion) {\n              _context2.next = 29;\n              break;\n            }\n\n            msg = _value;\n            _context2.prev = 16;\n\n            if (msg.from) {\n              _context2.next = 19;\n              break;\n            }\n\n            return _context2.abrupt(\"continue\", 26);\n\n          case 19:\n            onMessage({\n              from: msg.from,\n              data: httpRpcWireFormat.rpcToBytes(msg.data),\n              seqno: httpRpcWireFormat.rpcToBytes(msg.seqno),\n              topicIDs: httpRpcWireFormat.rpcArrayToTextArray(msg.topicIDs)\n            });\n            _context2.next = 26;\n            break;\n\n          case 22:\n            _context2.prev = 22;\n            _context2.t0 = _context2[\"catch\"](16);\n            _context2.t0.message = \"Failed to parse pubsub message: \".concat(_context2.t0.message);\n            onError(_context2.t0, false, msg);\n\n          case 26:\n            _iteratorNormalCompletion = true;\n            _context2.next = 7;\n            break;\n\n          case 29:\n            _context2.next = 35;\n            break;\n\n          case 31:\n            _context2.prev = 31;\n            _context2.t1 = _context2[\"catch\"](5);\n            _didIteratorError = true;\n            _iteratorError = _context2.t1;\n\n          case 35:\n            _context2.prev = 35;\n            _context2.prev = 36;\n\n            if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n              _context2.next = 40;\n              break;\n            }\n\n            _context2.next = 40;\n            return _iterator.return();\n\n          case 40:\n            _context2.prev = 40;\n\n            if (!_didIteratorError) {\n              _context2.next = 43;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 43:\n            return _context2.finish(40);\n\n          case 44:\n            return _context2.finish(35);\n\n          case 45:\n            _context2.next = 50;\n            break;\n\n          case 47:\n            _context2.prev = 47;\n            _context2.t2 = _context2[\"catch\"](2);\n\n            if (!isAbortError(_context2.t2)) {\n              onError(_context2.t2, true);\n            }\n\n          case 50:\n            _context2.prev = 50;\n            onEnd();\n            return _context2.finish(50);\n\n          case 53:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 47, 50, 53], [5, 31, 35, 45], [16, 22], [36,, 40, 44]]);\n  }));\n  return _readMessages.apply(this, arguments);\n}\n\nvar isAbortError = function isAbortError(error) {\n  switch (error.type) {\n    case 'aborted':\n      return true;\n\n    case 'abort':\n      return true;\n\n    default:\n      return error.name === 'AbortError';\n  }\n};\n\nexports.createSubscribe = createSubscribe;","map":null,"metadata":{},"sourceType":"script"}