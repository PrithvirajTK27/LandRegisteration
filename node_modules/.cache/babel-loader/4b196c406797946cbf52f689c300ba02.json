{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\src\\\\layouts\\\\Admin\\\\LI.js\";\nimport React from \"react\";\nimport { Route, Switch, Redirect, useLocation } from \"react-router-dom\"; // javascript plugin used to create scrollbars on windows\n\nimport PerfectScrollbar from \"perfect-scrollbar\"; // core components\n\nimport AdminNavbar from \"../../components/Navbars/AdminNavbar\";\nimport Footer from \"../../components/Footer/Footer\";\nimport Sidebar from \"../../components/Sidebar/Sidebar\";\nimport FixedPlugin from \"../../components/FixedPlugin/FixedPlugin\";\nimport LIDashboard from \"../../views/LIDashboard\";\nimport routes from \"../../routesLI\";\nimport logo from \"../../assets/img/react-logo.png\";\nimport { BackgroundColorContext } from \"../../contexts/BackgroundColorContext\";\nvar ps;\n\nfunction LI(props) {\n  var location = useLocation();\n  var mainPanelRef = React.useRef(null);\n\n  var _React$useState = React.useState(document.documentElement.className.indexOf(\"nav-open\") !== -1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      sidebarOpened = _React$useState2[0],\n      setsidebarOpened = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(mainPanelRef.current, {\n        suppressScrollX: true\n      });\n      var tables = document.querySelectorAll(\".table-responsive\");\n\n      for (var i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    } // Specify how to clean up after this effect:\n\n\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n        document.documentElement.classList.add(\"perfect-scrollbar-off\");\n        document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n      }\n    };\n  });\n  React.useEffect(function () {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      var tables = document.querySelectorAll(\".table-responsive\");\n\n      for (var i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n\n    if (mainPanelRef.current) {\n      mainPanelRef.current.scrollTop = 0;\n    }\n  }, [location]); // // this function opens and closes the sidebar on small devices\n\n  var toggleSidebar = function toggleSidebar() {\n    document.documentElement.classList.toggle(\"nav-open\");\n    setsidebarOpened(!sidebarOpened);\n  };\n\n  var getRoutes = function getRoutes(routes) {\n    return routes.map(function (prop, key) {\n      if (prop.layout === \"/LI\") {\n        return React.createElement(Route, {\n          path: prop.layout + prop.path,\n          component: prop.component,\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        });\n      } else {\n        return null;\n      }\n    });\n  };\n\n  var getBrandText = function getBrandText(path) {\n    for (var i = 0; i < routes.length; i++) {\n      if (location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\n        return routes[i].name;\n      }\n    }\n\n    return \"Brand\";\n  };\n\n  return React.createElement(BackgroundColorContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, function (_ref) {\n    var color = _ref.color,\n        changeColor = _ref.changeColor;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      routes: routes,\n      logo: {\n        outterLink: \"#\",\n        text: \"Land Registration\",\n        imgSrc: logo\n      },\n      toggleSidebar: toggleSidebar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"main-panel\",\n      ref: mainPanelRef,\n      data: color,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(AdminNavbar, {\n      brandText: getBrandText(location.pathname),\n      toggleSidebar: toggleSidebar,\n      sidebarOpened: sidebarOpened,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, getRoutes(routes), React.createElement(Redirect, {\n      from: \"*\",\n      to: \"/LI/LIDashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(Footer, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }))));\n  });\n}\n\nexport default LI;","map":{"version":3,"sources":["C:\\Users\\prith\\Desktop\\New folder (5)\\starter_kit-master\\LandRegisteration\\src\\layouts\\Admin\\LI.js"],"names":["React","Route","Switch","Redirect","useLocation","PerfectScrollbar","AdminNavbar","Footer","Sidebar","FixedPlugin","LIDashboard","routes","logo","BackgroundColorContext","ps","LI","props","location","mainPanelRef","useRef","useState","document","documentElement","className","indexOf","sidebarOpened","setsidebarOpened","useEffect","navigator","platform","classList","remove","current","suppressScrollX","tables","querySelectorAll","i","length","cleanup","destroy","add","scrollTop","scrollingElement","toggleSidebar","toggle","getRoutes","map","prop","key","layout","path","component","getBrandText","pathname","name","color","changeColor","outterLink","text","imgSrc"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport { Route, Switch, Redirect, useLocation } from \"react-router-dom\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// core components\nimport AdminNavbar from \"../../components/Navbars/AdminNavbar\";\nimport Footer from \"../../components/Footer/Footer\";\nimport Sidebar from \"../../components/Sidebar/Sidebar\";\nimport FixedPlugin from \"../../components/FixedPlugin/FixedPlugin\";\nimport LIDashboard from \"../../views/LIDashboard\";\nimport routes from \"../../routesLI\";\n\nimport logo from \"../../assets/img/react-logo.png\";\nimport { BackgroundColorContext } from \"../../contexts/BackgroundColorContext\";\n\nvar ps;\n\nfunction LI(props) {\n  const location = useLocation();\n  const mainPanelRef = React.useRef(null);\n  const [sidebarOpened, setsidebarOpened] = React.useState(\n    document.documentElement.className.indexOf(\"nav-open\") !== -1\n  );\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(mainPanelRef.current, {\n        suppressScrollX: true,\n      });\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n        document.documentElement.classList.add(\"perfect-scrollbar-off\");\n        document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n      }\n    };\n  });\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    if (mainPanelRef.current) {\n      mainPanelRef.current.scrollTop = 0;\n    }\n  }, [location]);\n  // // this function opens and closes the sidebar on small devices\n  const toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    setsidebarOpened(!sidebarOpened);\n  };\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/LI\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  \n  const getBrandText = (path) => {\n    for (let i = 0; i < routes.length; i++) {\n      if (location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  return (\n    <BackgroundColorContext.Consumer>\n      {({ color, changeColor }) => (\n        <React.Fragment>\n          <div className=\"wrapper\">\n            <Sidebar\n              routes={routes}\n              logo={{\n                outterLink: \"#\",\n                text: \"Land Registration\",\n                imgSrc: logo,\n              }}\n              toggleSidebar={toggleSidebar}\n            />\n            <div className=\"main-panel\" ref={mainPanelRef} data={color}>\n            <AdminNavbar\n                brandText={getBrandText(location.pathname)}\n                toggleSidebar={toggleSidebar}\n                sidebarOpened={sidebarOpened}\n              />\n              <Switch>\n                {getRoutes(routes)}\n                <Redirect from=\"*\" to=\"/LI/LIDashboard\" />\n              </Switch>\n              <Footer fluid />\n\n            </div>\n          </div>\n          {/* <FixedPlugin bgColor={color} handleBgClick={changeColor} /> */}\n        </React.Fragment>\n      )}\n    </BackgroundColorContext.Consumer>\n  );\n}\n\nexport default LI;\n"]},"metadata":{},"sourceType":"module"}