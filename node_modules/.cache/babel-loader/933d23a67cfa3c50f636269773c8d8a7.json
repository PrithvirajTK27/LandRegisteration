{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\src\\\\views\\\\ApproveTransaction.js\";\nimport React, { Component } from 'react';\nimport Land from \"../artifacts/Land.json\";\nimport getWeb3 from \"../getWeb3\";\nimport '../index.css';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { DrizzleProvider } from '@drizzle/react-plugin';\nimport { Spinner } from 'react-bootstrap'; // reactstrap components\n\nimport { Button, ButtonGroup, Card, CardHeader, CardBody, CardTitle, DropdownToggle, DropdownMenu, DropdownItem, UncontrolledDropdown, Label, FormGroup, Input, Table, Row, Col, UncontrolledTooltip } from \"reactstrap\";\nimport { LoadingContainer, AccountData, ContractData, ContractForm } from 'drizzle-react-components';\nvar drizzleOptions = {\n  contracts: [Land]\n};\nvar requestTable = [];\n\nvar ApproveRequest =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ApproveRequest, _Component);\n\n  function ApproveRequest(props) {\n    var _this;\n\n    _classCallCheck(this, ApproveRequest);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ApproveRequest).call(this, props));\n\n    _this.landTransfer = function (landId, newOwner) {\n      return (\n        /*#__PURE__*/\n        _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee() {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return _this.state.LandInstance.methods.LandOwnershipTransfer(landId, newOwner).send({\n                    from: _this.state.account,\n                    gas: 2100000\n                  });\n\n                case 2:\n                  //Reload\n                  // console.log(newOwner);\n                  // console.log(completed);\n                  // // this.setState({completed:false});\n                  // completed = false;\n                  // console.log(completed);\n                  window.location.reload(false);\n\n                case 3:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }))\n      );\n    };\n\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var web3, accounts, networkId, deployedNetwork, instance, currentAddress, requestsCount, verified, i, request, isPaid;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              //For refreshing page only once\n              if (!window.location.hash) {\n                window.location = window.location + '#loaded';\n                window.location.reload();\n              }\n\n              _context2.prev = 1;\n              _context2.next = 4;\n              return getWeb3();\n\n            case 4:\n              web3 = _context2.sent;\n              _context2.next = 7;\n              return web3.eth.getAccounts();\n\n            case 7:\n              accounts = _context2.sent;\n              _context2.next = 10;\n              return web3.eth.net.getId();\n\n            case 10:\n              networkId = _context2.sent;\n              deployedNetwork = Land.networks[networkId];\n              instance = new web3.eth.Contract(Land.abi, deployedNetwork && deployedNetwork.address);\n\n              _this.setState({\n                LandInstance: instance,\n                web3: web3,\n                account: accounts[0]\n              });\n\n              _context2.next = 16;\n              return web3.currentProvider.selectedAddress;\n\n            case 16:\n              currentAddress = _context2.sent;\n              console.log(currentAddress);\n              _context2.next = 20;\n              return _this.state.LandInstance.methods.getRequestsCount().call();\n\n            case 20:\n              requestsCount = _context2.sent;\n              console.log(requestsCount);\n              _context2.next = 24;\n              return _this.state.LandInstance.methods.isLandInspector(currentAddress).call();\n\n            case 24:\n              verified = _context2.sent;\n\n              //console.log(verified);\n              _this.setState({\n                verified: verified\n              }); // var requestsMap = [];\n              // requestsMap = await this.state.LandInstance.methods.getAllRequests().call();\n\n\n              i = 1;\n\n            case 27:\n              if (!(i < requestsCount + 1)) {\n                _context2.next = 40;\n                break;\n              }\n\n              _context2.next = 30;\n              return _this.state.LandInstance.methods.getRequestDetails(i).call();\n\n            case 30:\n              request = _context2.sent;\n              console.log(request); // console.log(request[0].toLowerCase());\n              // console.log(currentAddress);\n\n              _context2.next = 34;\n              return _this.state.LandInstance.methods.isPaid(request[2]).call();\n\n            case 34:\n              isPaid = _context2.sent;\n              console.log(isPaid);\n              requestTable.push(React.createElement(\"tr\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 115\n                },\n                __self: this\n              }, React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 115\n                },\n                __self: this\n              }, i), React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 115\n                },\n                __self: this\n              }, request[0]), React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 115\n                },\n                __self: this\n              }, request[1]), React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 115\n                },\n                __self: this\n              }, request[2]), React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 115\n                },\n                __self: this\n              }, request[3].toString()), React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 116\n                },\n                __self: this\n              }, React.createElement(Button, {\n                onClick: _this.landTransfer(i, request[1]),\n                disabled: !isPaid,\n                className: \"button-vote\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 117\n                },\n                __self: this\n              }, \"Approve Land Transfer\")))); // console.log(request[1]);\n\n            case 37:\n              i++;\n              _context2.next = 27;\n              break;\n\n            case 40:\n              _context2.next = 46;\n              break;\n\n            case 42:\n              _context2.prev = 42;\n              _context2.t0 = _context2[\"catch\"](1);\n              // Catch any errors for any of the above operations.\n              alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n              console.error(_context2.t0);\n\n            case 46:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this, [[1, 42]]);\n    }));\n    _this.state = {\n      LandInstance: undefined,\n      account: null,\n      web3: null,\n      approved: '',\n      verified: ''\n    };\n    return _this;\n  }\n\n  _createClass(ApproveRequest, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.state.web3) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(Spinner, {\n          animation: \"border\",\n          variant: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }))));\n      }\n\n      if (!this.state.verified) {\n        return React.createElement(\"div\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, \"You are not verified to view this page.\")));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(DrizzleProvider, {\n        options: drizzleOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(LoadingContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Lands Tranfer Request Info\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: \"tablesorter\",\n        responsive: true,\n        color: \"black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        className: \"text-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"#\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Seller ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Buyer ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Land ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Request Status\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Verify Transfer\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, requestTable)))))));\n    }\n  }]);\n\n  return ApproveRequest;\n}(Component);\n\nexport default ApproveRequest;","map":{"version":3,"sources":["C:\\Users\\prith\\Desktop\\New folder (5)\\starter_kit-master\\LandRegisteration\\src\\views\\ApproveTransaction.js"],"names":["React","Component","Land","getWeb3","DrizzleProvider","Spinner","Button","ButtonGroup","Card","CardHeader","CardBody","CardTitle","DropdownToggle","DropdownMenu","DropdownItem","UncontrolledDropdown","Label","FormGroup","Input","Table","Row","Col","UncontrolledTooltip","LoadingContainer","AccountData","ContractData","ContractForm","drizzleOptions","contracts","requestTable","ApproveRequest","props","landTransfer","landId","newOwner","state","LandInstance","methods","LandOwnershipTransfer","send","from","account","gas","window","location","reload","componentDidMount","hash","web3","eth","getAccounts","accounts","net","getId","networkId","deployedNetwork","networks","instance","Contract","abi","address","setState","currentProvider","selectedAddress","currentAddress","console","log","getRequestsCount","call","requestsCount","isLandInspector","verified","i","getRequestDetails","request","isPaid","push","toString","alert","error","undefined","approved"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport Land from \"../artifacts/Land.json\"\nimport getWeb3 from \"../getWeb3\"\nimport '../index.css';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { DrizzleProvider } from '@drizzle/react-plugin';\nimport {Spinner} from 'react-bootstrap'\n\n// reactstrap components\nimport {\n    Button,\n    ButtonGroup,\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    UncontrolledDropdown,\n    Label,\n    FormGroup,\n    Input,\n    Table,\n    Row,\n    Col,\n    UncontrolledTooltip,\n  } from \"reactstrap\";\n  \n\nimport {\n    LoadingContainer,\n    AccountData,\n    ContractData,\n    ContractForm\n} from 'drizzle-react-components'\n\nconst drizzleOptions = {\n    contracts: [Land]\n}\n\nvar requestTable = [];\n\nclass ApproveRequest extends Component {\n    constructor(props){\n        super(props)\n\n        this.state = {\n            LandInstance: undefined,\n            account: null,\n            web3: null,\n            approved: '',\n            verified: '',\n        }\n    }\n    landTransfer = (landId, newOwner) => async () => {\n\n        await this.state.LandInstance.methods.LandOwnershipTransfer(\n            landId, newOwner\n        ).send({\n            from: this.state.account,\n            gas: 2100000\n        });\n        //Reload\n        // console.log(newOwner);\n        // console.log(completed);\n        // // this.setState({completed:false});\n        // completed = false;\n        // console.log(completed);\n\n        window.location.reload(false);\n\n    }\n\n    componentDidMount = async () => {\n        //For refreshing page only once\n        if(!window.location.hash){\n            window.location = window.location + '#loaded';\n            window.location.reload();\n        }\n\n        try{\n            //Get network provider and web3 instance\n            const web3 = await getWeb3();\n\n            const accounts = await web3.eth.getAccounts();\n\n            const networkId = await web3.eth.net.getId();\n            const deployedNetwork = Land.networks[networkId];\n            const instance = new web3.eth.Contract(\n                Land.abi,\n                deployedNetwork && deployedNetwork.address,\n            );\n\n            this.setState({ LandInstance: instance, web3: web3, account: accounts[0] });\n            \n            const currentAddress = await web3.currentProvider.selectedAddress;\n            console.log(currentAddress);\n            \n            var requestsCount = await this.state.LandInstance.methods.getRequestsCount().call();\n            console.log(requestsCount);\n            var verified = await this.state.LandInstance.methods.isLandInspector(currentAddress).call();\n            //console.log(verified);\n            this.setState({ verified: verified });\n            // var requestsMap = [];\n            // requestsMap = await this.state.LandInstance.methods.getAllRequests().call();\n\n            for(let i = 1; i<requestsCount+1; i++){\n                var request = await this.state.LandInstance.methods.getRequestDetails(i).call();\n                console.log(request);\n                // console.log(request[0].toLowerCase());\n                // console.log(currentAddress);\n                var isPaid = await this.state.LandInstance.methods.isPaid(request[2]).call();\n                console.log(isPaid);\n                requestTable.push(<tr><td>{i}</td><td>{request[0]}</td><td>{request[1]}</td><td>{request[2]}</td><td>{request[3].toString()}</td>\n                <td>\n                    <Button onClick={this.landTransfer(i, request[1])} disabled={!isPaid} className=\"button-vote\">\n                        Approve Land Transfer\n                </Button>\n                </td></tr>)\n                // console.log(request[1]);\n            }\n\n        }catch (error) {\n            // Catch any errors for any of the above operations.\n            alert(\n              `Failed to load web3, accounts, or contract. Check console for details.`,\n            );\n            console.error(error);\n          }\n    };\n\n    render() {\n        if (!this.state.web3) {\n          return (\n            <div>\n              <div>\n                <h1>\n                <Spinner animation=\"border\" variant=\"primary\" />\n                </h1>\n              </div>\n              \n            </div>\n          );\n        }\n\n        if (!this.state.verified) {\n            return (\n              <div className=\"content\">\n                <div>\n                  <h1>\n                  You are not verified to view this page.\n                  </h1>\n                </div>\n                \n              </div>\n            );\n          }\n\n        return (\n            <div  className=\"content\">\n            <DrizzleProvider options={drizzleOptions}>\n            <LoadingContainer>\n            <Card>\n                    <CardHeader>\n                      <CardTitle tag=\"h4\">Lands Tranfer Request Info</CardTitle>\n                    </CardHeader>\n                    <CardBody>\n                    <Table className=\"tablesorter\" responsive color=\"black\">\n                        <thead className=\"text-primary\">\n                            <tr>\n                                <th>#</th>\n                                <th>Seller ID</th>\n                                <th>Buyer ID</th>\n                                <th>Land ID</th>\n                                <th>Request Status</th>\n                                <th>Verify Transfer</th>\n\n                            </tr>\n                        </thead> \n                        <tbody>\n                            {requestTable}\n                        </tbody> \n                    </Table>\n                </CardBody>\n                </Card>\n            </LoadingContainer>\n            </DrizzleProvider>\n            </div>\n        );\n        \n    }\n}\n\nexport default ApproveRequest;\n"]},"metadata":{},"sourceType":"module"}