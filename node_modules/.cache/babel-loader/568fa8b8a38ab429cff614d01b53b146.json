{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\src\\\\views\\\\updateBuyer.js\";\nimport React, { Component } from 'react';\nimport Land from \"../artifacts/Land.json\";\nimport getWeb3 from \"../getWeb3\";\nimport \"../index.css\";\nimport { FormControl } from \"react-bootstrap\";\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { DrizzleProvider } from '@drizzle/react-plugin';\nimport { Spinner } from 'react-bootstrap';\nimport { Button, Card, CardHeader, CardBody, CardFooter, CardText, FormGroup, Form, Input, Row, Col } from \"reactstrap\";\nimport { LoadingContainer, AccountData, ContractData, ContractForm } from '@drizzle/react-components';\nvar drizzleOptions = {\n  contracts: [Land]\n};\nvar buyer;\nvar buyerTable = [];\nvar verification = [];\n\nvar updateBuyer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(updateBuyer, _Component);\n\n  function updateBuyer(props) {\n    var _this;\n\n    _classCallCheck(this, updateBuyer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(updateBuyer).call(this, props));\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var web3, accounts, currentAddress, networkId, deployedNetwork, instance, buyer_verify, not_verify;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //For refreshing page only once\n              if (!window.location.hash) {\n                window.location = window.location + '#loaded';\n                window.location.reload();\n              }\n\n              _context.prev = 1;\n              _context.next = 4;\n              return getWeb3();\n\n            case 4:\n              web3 = _context.sent;\n              _context.next = 7;\n              return web3.eth.getAccounts();\n\n            case 7:\n              accounts = _context.sent;\n              _context.next = 10;\n              return web3.currentProvider.selectedAddress;\n\n            case 10:\n              currentAddress = _context.sent;\n              console.log(currentAddress);\n              _context.next = 14;\n              return web3.eth.net.getId();\n\n            case 14:\n              networkId = _context.sent;\n              deployedNetwork = Land.networks[networkId];\n              instance = new web3.eth.Contract(Land.abi, deployedNetwork && deployedNetwork.address);\n\n              _this.setState({\n                LandInstance: instance,\n                web3: web3,\n                account: accounts[0]\n              });\n\n              _this.setState({\n                address: currentAddress\n              });\n\n              _context.next = 21;\n              return _this.state.LandInstance.methods.isVerified(currentAddress).call();\n\n            case 21:\n              buyer_verify = _context.sent;\n              _context.next = 24;\n              return _this.state.LandInstance.methods.isRejected(currentAddress).call();\n\n            case 24:\n              not_verify = _context.sent;\n\n              if (buyer_verify) {\n                verification.push(React.createElement(\"p\", {\n                  id: \"verified\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 87\n                  },\n                  __self: this\n                }, \"Verified \", React.createElement(\"i\", {\n                  class: \"fas fa-user-check\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 87\n                  },\n                  __self: this\n                })));\n              } else if (not_verify) {\n                verification.push(React.createElement(\"p\", {\n                  id: \"rejected\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 89\n                  },\n                  __self: this\n                }, \"Rejected \", React.createElement(\"i\", {\n                  class: \"fas fa-user-times\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 89\n                  },\n                  __self: this\n                })));\n              } else {\n                verification.push(React.createElement(\"p\", {\n                  id: \"unknown\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 91\n                  },\n                  __self: this\n                }, \"Not Yet Verified \", React.createElement(\"i\", {\n                  class: \"fas fa-user-cog\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 91\n                  },\n                  __self: this\n                })));\n              }\n\n              _context.next = 28;\n              return _this.state.LandInstance.methods.getBuyerDetails(currentAddress).call();\n\n            case 28:\n              buyer = _context.sent;\n              console.log(buyer);\n              console.log(buyer[0]);\n\n              _this.setState({\n                name: buyer[0],\n                age: buyer[5],\n                city: buyer[1],\n                email: buyer[4],\n                aadharNumber: buyer[6],\n                panNumber: buyer[2]\n              });\n\n              buyerTable.push(React.createElement(Row, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 99\n                },\n                __self: this\n              }, React.createElement(Col, {\n                md: \"12\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 100\n                },\n                __self: this\n              }, React.createElement(FormGroup, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 101\n                },\n                __self: this\n              }, React.createElement(\"label\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 102\n                },\n                __self: this\n              }, \"Your Wallet Address: \"), React.createElement(Input, {\n                disabled: true,\n                type: \"text\",\n                value: currentAddress,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 103\n                },\n                __self: this\n              })))));\n              _context.next = 39;\n              break;\n\n            case 35:\n              _context.prev = 35;\n              _context.t0 = _context[\"catch\"](1);\n              // Catch any errors for any of the above operations.\n              alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n              console.error(_context.t0);\n\n            case 39:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[1, 35]]);\n    }));\n    _this.updateBuyer =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(_this.state.name == '' || _this.state.age == '' || _this.state.city == '' || _this.state.email == '' || _this.state.aadharNumber == '' || _this.state.panNumber == '')) {\n                _context2.next = 4;\n                break;\n              }\n\n              alert(\"All the fields are compulsory!\");\n              _context2.next = 19;\n              break;\n\n            case 4:\n              if (!(_this.state.aadharNumber.length != 12)) {\n                _context2.next = 8;\n                break;\n              }\n\n              alert(\"Aadhar Number should be 12 digits long!\");\n              _context2.next = 19;\n              break;\n\n            case 8:\n              if (!(_this.state.panNumber.length != 10)) {\n                _context2.next = 12;\n                break;\n              }\n\n              alert(\"Pan Number should be a 10 digit unique number!\");\n              _context2.next = 19;\n              break;\n\n            case 12:\n              if (Number(_this.state.age)) {\n                _context2.next = 16;\n                break;\n              }\n\n              alert(\"Your age must be a number\");\n              _context2.next = 19;\n              break;\n\n            case 16:\n              _context2.next = 18;\n              return _this.state.LandInstance.methods.updateBuyer(_this.state.name, _this.state.age, _this.state.city, _this.state.aadharNumber, _this.state.email, _this.state.panNumber).send({\n                from: _this.state.address,\n                gas: 2100000\n              }).then(function (response) {\n                _this.props.history.push(\"/admin/buyerProfile\");\n              });\n\n            case 18:\n              //Reload\n              window.location.reload(false);\n\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    _this.updateName = function (event) {\n      return _this.setState({\n        name: event.target.value\n      });\n    };\n\n    _this.updateAge = function (event) {\n      return _this.setState({\n        age: event.target.value\n      });\n    };\n\n    _this.updateCity = function (event) {\n      return _this.setState({\n        city: event.target.value\n      });\n    };\n\n    _this.updateEmail = function (event) {\n      return _this.setState({\n        email: event.target.value\n      });\n    };\n\n    _this.updateAadhar = function (event) {\n      return _this.setState({\n        aadharNumber: event.target.value\n      });\n    };\n\n    _this.updatePan = function (event) {\n      return _this.setState({\n        panNumber: event.target.value\n      });\n    };\n\n    _this.state = {\n      LandInstance: undefined,\n      account: null,\n      web3: null,\n      address: '',\n      buyers: 0,\n      sellers: 0,\n      name: '',\n      age: '',\n      city: '',\n      email: '',\n      aadharNumber: '',\n      panNumber: '',\n      verified: ''\n    };\n    return _this;\n  }\n\n  _createClass(updateBuyer, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.state.web3) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, React.createElement(Spinner, {\n          animation: \"border\",\n          variant: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }))));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(DrizzleProvider, {\n        options: drizzleOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(LoadingContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Buyer Profile\"), React.createElement(\"h5\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, verification)), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, buyerTable, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Input, {\n        type: \"text\",\n        value: this.state.name,\n        onChange: this.updateName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Age\"), React.createElement(Input, {\n        type: \"text\",\n        value: this.state.age,\n        onChange: this.updateAge,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"Email Address \"), React.createElement(Input, {\n        type: \"text\",\n        value: this.state.email,\n        onChange: this.updateEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"City\"), React.createElement(Input, {\n        type: \"text\",\n        value: this.state.city,\n        onChange: this.updateCity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"Aadhar Number\"), React.createElement(Input, {\n        type: \"text\",\n        value: this.state.aadharNumber,\n        onChange: this.updateAadhar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \"Pan Number\"), React.createElement(Input, {\n        type: \"text\",\n        value: this.state.panNumber,\n        onChange: this.updatePan,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      })))))), React.createElement(CardFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.updateBuyer,\n        className: \"btn-fill\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \"Update\"))))))));\n    }\n  }]);\n\n  return updateBuyer;\n}(Component);\n\nexport default updateBuyer;","map":{"version":3,"sources":["C:\\Users\\prith\\Desktop\\New folder (5)\\starter_kit-master\\LandRegisteration\\src\\views\\updateBuyer.js"],"names":["React","Component","Land","getWeb3","FormControl","DrizzleProvider","Spinner","Button","Card","CardHeader","CardBody","CardFooter","CardText","FormGroup","Form","Input","Row","Col","LoadingContainer","AccountData","ContractData","ContractForm","drizzleOptions","contracts","buyer","buyerTable","verification","updateBuyer","props","componentDidMount","window","location","hash","reload","web3","eth","getAccounts","accounts","currentProvider","selectedAddress","currentAddress","console","log","net","getId","networkId","deployedNetwork","networks","instance","Contract","abi","address","setState","LandInstance","account","state","methods","isVerified","call","buyer_verify","isRejected","not_verify","push","getBuyerDetails","name","age","city","email","aadharNumber","panNumber","alert","error","length","Number","send","from","gas","then","response","history","updateName","event","target","value","updateAge","updateCity","updateEmail","updateAadhar","updatePan","undefined","buyers","sellers","verified"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Land from \"../artifacts/Land.json\";\nimport getWeb3 from \"../getWeb3\";\nimport \"../index.css\";\nimport { FormControl } from \"react-bootstrap\";\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { DrizzleProvider } from '@drizzle/react-plugin';\nimport { Spinner } from 'react-bootstrap';\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    CardFooter,\n    CardText,\n    FormGroup,\n    Form,\n    Input,\n    Row,\n    Col,\n  } from \"reactstrap\";\n\nimport {\n    LoadingContainer,\n    AccountData,\n    ContractData,\n    ContractForm\n} from '@drizzle/react-components'\n\nconst drizzleOptions = {\n    contracts: [Land]\n}\n\nvar buyer;\nvar buyerTable = [];\nvar verification = [];\n\nclass updateBuyer extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            LandInstance: undefined,\n            account: null,\n            web3: null,\n            address: '',\n            buyers: 0,\n            sellers: 0,\n            name: '',\n            age: '',\n            city: '',\n            email: '',\n            aadharNumber: '',\n            panNumber: '',\n            verified: '',\n        }\n    }\n\n    componentDidMount = async () => {\n        //For refreshing page only once\n        if (!window.location.hash) {\n            window.location = window.location + '#loaded';\n            window.location.reload();\n        }\n\n        try {\n            //Get network provider and web3 instance\n            const web3 = await getWeb3();\n\n            const accounts = await web3.eth.getAccounts();\n\n            const currentAddress = await web3.currentProvider.selectedAddress;\n            console.log(currentAddress);\n            const networkId = await web3.eth.net.getId();\n            const deployedNetwork = Land.networks[networkId];\n            const instance = new web3.eth.Contract(\n                Land.abi,\n                deployedNetwork && deployedNetwork.address,\n            );\n\n            this.setState({ LandInstance: instance, web3: web3, account: accounts[0] });\n            this.setState({address: currentAddress});\n            var buyer_verify = await this.state.LandInstance.methods.isVerified(currentAddress).call();\n                \n            var not_verify = await this.state.LandInstance.methods.isRejected(currentAddress).call();\n            if(buyer_verify){\n              verification.push(<p id = \"verified\">Verified <i class=\"fas fa-user-check\"></i></p>);\n            }else if(not_verify){\n              verification.push(<p  id = \"rejected\">Rejected <i class=\"fas fa-user-times\"></i></p>);\n            }else{\n              verification.push(<p id = \"unknown\">Not Yet Verified <i class=\"fas fa-user-cog\"></i></p>);\n            }\n\n            buyer = await this.state.LandInstance.methods.getBuyerDetails(currentAddress).call();\n            console.log(buyer);\n            console.log(buyer[0]);\n            this.setState({name: buyer[0], age: buyer[5], city: buyer[1], email: buyer[4], aadharNumber: buyer[6], panNumber: buyer[2]});\n            buyerTable.push(\n            <Row>\n                <Col md=\"12\">\n                  <FormGroup>\n                    <label>Your Wallet Address: </label>\n                    <Input\n                      disabled\n                      type=\"text\"\n                      value={currentAddress}\n                    />\n                  </FormGroup>\n                </Col>\n              </Row>\n              );\n\n        } catch (error) {\n            // Catch any errors for any of the above operations.\n            alert(\n                `Failed to load web3, accounts, or contract. Check console for details.`,\n            );\n            console.error(error);\n        }\n    };\n    updateBuyer = async () => {\n      if (this.state.name == '' || this.state.age == '' || this.state.city == '' || this.state.email == '' || this.state.aadharNumber == '' || this.state.panNumber == '') {\n          alert(\"All the fields are compulsory!\");\n      } else if(this.state.aadharNumber.length != 12){\n          alert(\"Aadhar Number should be 12 digits long!\");\n      } else if(this.state.panNumber.length != 10){\n          alert(\"Pan Number should be a 10 digit unique number!\");\n      } else if (!Number(this.state.age)) {\n          alert(\"Your age must be a number\");\n      } \n      else{\n          await this.state.LandInstance.methods.updateBuyer(\n              this.state.name,\n              this.state.age,\n              this.state.city,\n              this.state.aadharNumber,\n              this.state.email,\n              this.state.panNumber\n              )\n              .send({\n                  from : this.state.address,\n                  gas : 2100000\n              }).then(response => {\n                  this.props.history.push(\"/admin/buyerProfile\");\n              });\n\n          //Reload\n          window.location.reload(false);\n      }\n  }\n\n  updateName = event => (\n      this.setState({ name: event.target.value })\n  )\n  updateAge = event => (\n      this.setState({ age: event.target.value })\n  )\n  updateCity = event => (\n      this.setState({ city: event.target.value })\n  )\n  updateEmail = event => (\n      this.setState({ email: event.target.value })\n  )\n  updateAadhar = event => (\n      this.setState({ aadharNumber: event.target.value })\n  )\n  updatePan = event => (\n      this.setState({ panNumber: event.target.value })\n  )\n\n    render() {\n        if (!this.state.web3) {\n            return (\n                <div>\n                    <div>\n                        <h1>\n                            <Spinner animation=\"border\" variant=\"primary\" />\n                        </h1>\n                    </div>\n\n                </div>\n            );\n        }\n\n        return (\n          <div className=\"content\">\n            <DrizzleProvider options={drizzleOptions}>\n              <LoadingContainer>\n                <Row>\n                  <Col md=\"8\">\n                    <Card>\n                      <CardHeader>\n                        <h5 className=\"title\">Buyer Profile</h5>\n                        <h5 className=\"title\">{verification}</h5>\n\n                      </CardHeader>\n                      <CardBody>\n                        <Form>\n                          {buyerTable}\n                          <Row>\n                            <Col md=\"12\">\n                              <FormGroup>\n                                <label>Name</label>\n                                <Input\n                                  type=\"text\"\n                                  value={this.state.name}\n                                  onChange={this.updateName}\n                                />\n                              </FormGroup>\n                            </Col>\n\n                          </Row>\n                          <Row>\n                            <Col md=\"12\">\n                              <FormGroup>\n                                <label>Age</label>\n                                <Input\n                                  type=\"text\"\n                                  value={this.state.age}\n                                  onChange={this.updateAge}\n                                />\n                              </FormGroup>\n                            </Col>\n\n                          </Row>\n                          <Row>\n                            <Col md=\"12\">\n                              <FormGroup>\n                                <label>Email Address </label>\n                                <Input\n                                  type=\"text\"\n                                  value={this.state.email}\n                                  onChange={this.updateEmail}\n                                />\n                              </FormGroup>\n                            </Col>\n                          </Row>\n                          <Row>\n                            <Col md=\"12\">\n                              <FormGroup>\n                                <label>City</label>\n                                <Input\n                                  type=\"text\"\n                                  value={this.state.city}\n                                  onChange={this.updateCity}\n                                />\n                              </FormGroup>\n                            </Col>\n                          </Row>\n                          <Row>\n                            <Col md=\"12\">\n                              <FormGroup>\n                                <label>Aadhar Number</label>\n                                <Input\n                                  type=\"text\"\n                                  value={this.state.aadharNumber}\n                                  onChange={this.updateAadhar}\n                                />\n                              </FormGroup>\n                            </Col>\n                          </Row>\n                          <Row>\n                            <Col md=\"12\">\n                              <FormGroup>\n                                <label>Pan Number</label>\n                                <Input\n                                  type=\"text\"\n                                  value={this.state.panNumber}\n                                  onChange={this.updatePan}\n                                />\n                              </FormGroup>\n                            </Col>\n                          </Row>\n                        </Form>\n                      </CardBody>\n                      <CardFooter>\n                        <Button onClick={this.updateBuyer} className=\"btn-fill\" color=\"primary\">\n                          Update\n                      </Button>\n                      </CardFooter>\n                    </Card>\n                  </Col>\n                </Row>\n              </LoadingContainer>\n            </DrizzleProvider>\n          </div>\n        );\n\n    }\n}\n\nexport default updateBuyer;"]},"metadata":{},"sourceType":"module"}