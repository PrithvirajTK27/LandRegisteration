{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\src\\\\views\\\\OwnedLands.js\";\nimport React, { Component } from 'react';\nimport { Line, Bar } from \"react-chartjs-2\";\nimport LandContract from \"../artifacts/Land.json\";\nimport Land from \"../artifacts/Land.json\";\nimport getWeb3 from \"../getWeb3\";\nimport { DrizzleProvider } from 'drizzle-react';\nimport { Spinner } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { LoadingContainer, AccountData, ContractData, ContractForm } from 'drizzle-react-components';\nimport viewImage from './viewImage'; // reactstrap components\n\nimport { Button, ButtonGroup, Card, CardHeader, CardBody, CardTitle, Input, Table, Row, Col, UncontrolledTooltip } from \"reactstrap\";\nvar drizzleOptions = {\n  contracts: [Land]\n};\nvar verified;\nvar row = [];\n\nvar OwnedLands =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(OwnedLands, _Component);\n\n  function OwnedLands(props) {\n    var _this;\n\n    _classCallCheck(this, OwnedLands);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OwnedLands).call(this, props));\n\n    _this.viewImage = function (landId) {\n      alert(landId);\n\n      _this.props.history.push({\n        pathname: '/viewImage'\n      });\n    };\n\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var web3, accounts, networkId, deployedNetwork, instance, currentAddress, registered, count, rowsArea, rowsCity, rowsState, rowsPrice, rowsPID, rowsSurvey, rowsIpfs, i, owner;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //For refreshing page only once\n              if (!window.location.hash) {\n                window.location = window.location + '#loaded';\n                window.location.reload();\n              }\n\n              _context.prev = 1;\n              _context.next = 4;\n              return getWeb3();\n\n            case 4:\n              web3 = _context.sent;\n              _context.next = 7;\n              return web3.eth.getAccounts();\n\n            case 7:\n              accounts = _context.sent;\n              _context.next = 10;\n              return web3.eth.net.getId();\n\n            case 10:\n              networkId = _context.sent;\n              deployedNetwork = Land.networks[networkId];\n              instance = new web3.eth.Contract(Land.abi, deployedNetwork && deployedNetwork.address);\n              _context.next = 15;\n              return web3.currentProvider.selectedAddress;\n\n            case 15:\n              currentAddress = _context.sent;\n              console.log(currentAddress);\n\n              _this.setState({\n                LandInstance: instance,\n                web3: web3,\n                account: accounts[0]\n              });\n\n              _context.next = 20;\n              return _this.state.LandInstance.methods.isVerified(currentAddress).call();\n\n            case 20:\n              verified = _context.sent;\n              console.log(verified);\n\n              _this.setState({\n                verified: verified\n              });\n\n              _context.next = 25;\n              return _this.state.LandInstance.methods.isBuyer(currentAddress).call();\n\n            case 25:\n              registered = _context.sent;\n              console.log(registered);\n\n              _this.setState({\n                registered: registered\n              });\n\n              _context.next = 30;\n              return _this.state.LandInstance.methods.getLandsCount().call();\n\n            case 30:\n              count = _context.sent;\n              count = parseInt(count);\n              console.log(typeof count);\n              console.log(count); //this.setState({count:count});\n\n              rowsArea = [];\n              rowsCity = [];\n              rowsState = [];\n              rowsPrice = [];\n              rowsPID = [];\n              rowsSurvey = [];\n              rowsIpfs = [];\n\n              for (i = 1; i < count + 1; i++) {\n                rowsArea.push(React.createElement(ContractData, {\n                  contract: \"Land\",\n                  method: \"getArea\",\n                  methodArgs: [i, {\n                    from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\"\n                  }],\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 112\n                  },\n                  __self: this\n                }));\n                rowsCity.push(React.createElement(ContractData, {\n                  contract: \"Land\",\n                  method: \"getCity\",\n                  methodArgs: [i, {\n                    from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\"\n                  }],\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 113\n                  },\n                  __self: this\n                }));\n                rowsState.push(React.createElement(ContractData, {\n                  contract: \"Land\",\n                  method: \"getState\",\n                  methodArgs: [i, {\n                    from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\"\n                  }],\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 114\n                  },\n                  __self: this\n                }));\n                rowsPrice.push(React.createElement(ContractData, {\n                  contract: \"Land\",\n                  method: \"getPrice\",\n                  methodArgs: [i, {\n                    from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\"\n                  }],\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 115\n                  },\n                  __self: this\n                }));\n                rowsPID.push(React.createElement(ContractData, {\n                  contract: \"Land\",\n                  method: \"getPID\",\n                  methodArgs: [i, {\n                    from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\"\n                  }],\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 116\n                  },\n                  __self: this\n                }));\n                rowsSurvey.push(React.createElement(ContractData, {\n                  contract: \"Land\",\n                  method: \"getSurveyNumber\",\n                  methodArgs: [i, {\n                    from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\"\n                  }],\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 117\n                  },\n                  __self: this\n                }));\n              }\n\n              i = 0;\n\n            case 43:\n              if (!(i < count)) {\n                _context.next = 53;\n                break;\n              }\n\n              _context.next = 46;\n              return _this.state.LandInstance.methods.getLandOwner(i + 1).call();\n\n            case 46:\n              owner = _context.sent;\n              console.log(owner.toLowerCase());\n              console.log(currentAddress);\n\n              if (owner.toLowerCase() == currentAddress) {\n                row.push(React.createElement(\"tr\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 126\n                  },\n                  __self: this\n                }, React.createElement(\"td\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 126\n                  },\n                  __self: this\n                }, i + 1), React.createElement(\"td\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 126\n                  },\n                  __self: this\n                }, rowsArea[i]), React.createElement(\"td\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 126\n                  },\n                  __self: this\n                }, rowsCity[i]), React.createElement(\"td\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 126\n                  },\n                  __self: this\n                }, rowsState[i]), React.createElement(\"td\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 126\n                  },\n                  __self: this\n                }, rowsPrice[i]), React.createElement(\"td\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 126\n                  },\n                  __self: this\n                }, rowsPID[i]), React.createElement(\"td\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 126\n                  },\n                  __self: this\n                }, rowsSurvey[i])));\n              }\n\n            case 50:\n              i++;\n              _context.next = 43;\n              break;\n\n            case 53:\n              console.log(row);\n              _context.next = 60;\n              break;\n\n            case 56:\n              _context.prev = 56;\n              _context.t0 = _context[\"catch\"](1);\n              // Catch any errors for any of the above operations.\n              alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n              console.error(_context.t0);\n\n            case 60:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[1, 56]]);\n    }));\n    _this.state = {\n      LandInstance: undefined,\n      account: null,\n      web3: null,\n      flag: null,\n      verified: '',\n      registered: '',\n      count: 0,\n      id: ''\n    };\n    return _this;\n  }\n\n  _createClass(OwnedLands, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.state.web3) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(Spinner, {\n          animation: \"border\",\n          variant: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }))));\n      }\n\n      if (!this.state.registered) {\n        return React.createElement(\"div\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, React.createElement(Col, {\n          xs: \"6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, React.createElement(Card, {\n          className: \"card-chart\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, React.createElement(CardBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, \"You are not verified to view this page\")))))));\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(DrizzleProvider, {\n        options: drizzleOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(LoadingContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"12\",\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Owned Lands\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: \"tablesorter\",\n        responsive: true,\n        color: \"black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        className: \"text-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"#\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Area\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"City\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"State\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"Price\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Property PID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Survey Number\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, row))))))))));\n    }\n  }]);\n\n  return OwnedLands;\n}(Component);\n\nexport default OwnedLands;","map":{"version":3,"sources":["C:\\Users\\prith\\Desktop\\New folder (5)\\starter_kit-master\\LandRegisteration\\src\\views\\OwnedLands.js"],"names":["React","Component","Line","Bar","LandContract","Land","getWeb3","DrizzleProvider","Spinner","Link","LoadingContainer","AccountData","ContractData","ContractForm","viewImage","Button","ButtonGroup","Card","CardHeader","CardBody","CardTitle","Input","Table","Row","Col","UncontrolledTooltip","drizzleOptions","contracts","verified","row","OwnedLands","props","landId","alert","history","push","pathname","componentDidMount","window","location","hash","reload","web3","eth","getAccounts","accounts","net","getId","networkId","deployedNetwork","networks","instance","Contract","abi","address","currentProvider","selectedAddress","currentAddress","console","log","setState","LandInstance","account","state","methods","isVerified","call","isBuyer","registered","getLandsCount","count","parseInt","rowsArea","rowsCity","rowsState","rowsPrice","rowsPID","rowsSurvey","rowsIpfs","i","from","getLandOwner","owner","toLowerCase","error","undefined","flag","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Line, Bar } from \"react-chartjs-2\";\nimport LandContract from \"../artifacts/Land.json\";\nimport Land from \"../artifacts/Land.json\";\nimport getWeb3 from \"../getWeb3\";\nimport { DrizzleProvider } from 'drizzle-react';\nimport { Spinner  } from 'react-bootstrap';\nimport {  Link} from 'react-router-dom';\nimport {\n  LoadingContainer,\n  AccountData,\n  ContractData,\n  ContractForm\n} from 'drizzle-react-components';\n\nimport viewImage from './viewImage';\n\n// reactstrap components\nimport {\n  Button,\n  ButtonGroup,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Input,\n  Table,\n  Row,\n  Col,\n  UncontrolledTooltip,\n} from \"reactstrap\";\n\n\nconst drizzleOptions = {\n  contracts: [Land]\n}\n\n\nvar verified;\nvar row = [];\n\n\nclass OwnedLands extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      LandInstance: undefined,\n      account: null,\n      web3: null,\n      flag: null,\n      verified: '',\n      registered: '',\n      count: 0,\n      id: '',\n    }\n  }\n\n  viewImage = (landId) => {\n    alert(landId);\n    this.props.history.push({\n        pathname: '/viewImage',\n      })\n}\n\n  componentDidMount = async () => {\n    //For refreshing page only once\n    if (!window.location.hash) {\n      window.location = window.location + '#loaded';\n      window.location.reload();\n    }\n\n    try {\n      //Get network provider and web3 instance\n      const web3 = await getWeb3();\n\n      const accounts = await web3.eth.getAccounts();\n\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = Land.networks[networkId];\n      const instance = new web3.eth.Contract(\n        Land.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      const currentAddress = await web3.currentProvider.selectedAddress;\n      console.log(currentAddress);\n      this.setState({ LandInstance: instance, web3: web3, account: accounts[0] });\n      verified = await this.state.LandInstance.methods.isVerified(currentAddress).call();\n      console.log(verified);\n      this.setState({ verified: verified });\n      var registered = await this.state.LandInstance.methods.isBuyer(currentAddress).call();\n      console.log(registered);\n      this.setState({ registered: registered });\n\n      var count = await this.state.LandInstance.methods.getLandsCount().call();\n      count = parseInt(count);\n      console.log(typeof (count));\n      console.log(count);\n      //this.setState({count:count});\n\n      var rowsArea = [];\n      var rowsCity = [];\n      var rowsState = [];\n      var rowsPrice = [];\n      var rowsPID = [];\n      var rowsSurvey = [];\n      var rowsIpfs = []\n      \n\n      for (var i = 1; i < count + 1; i++) {\n        rowsArea.push(<ContractData contract=\"Land\" method=\"getArea\" methodArgs={[i, { from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\" }]} />);\n        rowsCity.push(<ContractData contract=\"Land\" method=\"getCity\" methodArgs={[i, { from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\" }]} />);\n        rowsState.push(<ContractData contract=\"Land\" method=\"getState\" methodArgs={[i, { from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\" }]} />);\n        rowsPrice.push(<ContractData contract=\"Land\" method=\"getPrice\" methodArgs={[i, { from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\" }]} />);\n        rowsPID.push(<ContractData contract=\"Land\" method=\"getPID\" methodArgs={[i, { from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\" }]} />);\n        rowsSurvey.push(<ContractData contract=\"Land\" method=\"getSurveyNumber\" methodArgs={[i, { from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\" }]} />);\n      }\n    \n\n      for (var i = 0; i < count; i++) {\n        var owner = await this.state.LandInstance.methods.getLandOwner(i+1).call();\n        console.log(owner.toLowerCase());\n        console.log(currentAddress);\n        if(owner.toLowerCase() == currentAddress){\n            row.push(<tr><td>{i + 1}</td><td>{rowsArea[i]}</td><td>{rowsCity[i]}</td><td>{rowsState[i]}</td><td>{rowsPrice[i]}</td><td>{rowsPID[i]}</td><td>{rowsSurvey[i]}</td>\n                </tr>)\n        }\n      }\n      console.log(row);\n\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  render() {\n    if (!this.state.web3) {\n      return (\n        <div>\n          <div>\n            <h1>\n              <Spinner animation=\"border\" variant=\"primary\" />\n            </h1>\n          </div>\n\n        </div>\n      );\n    }\n\n    if (!this.state.registered) {\n      return (\n        <div className=\"content\">\n          <div>\n            <Row>\n              <Col xs=\"6\">\n                <Card className=\"card-chart\">\n                  <CardBody>\n                    <h1>\n                      You are not verified to view this page\n                                        </h1>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n\n        </div>\n      );\n    }\n\n\n    return (\n      <>\n        <div className=\"content\">\n          <DrizzleProvider options={drizzleOptions}>\n            <LoadingContainer>\n              <Row>\n                <Col lg=\"12\" md=\"12\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle tag=\"h4\">Owned Lands\n                      </CardTitle>\n                    </CardHeader>\n                    <CardBody>\n                      <Table className=\"tablesorter\" responsive color=\"black\">\n                        <thead className=\"text-primary\">\n                          <tr>\n                          <th>#</th>\n                            <th>Area</th>\n                            <th>City</th>\n                            <th>State</th>\n                            <th>Price</th>\n                            <th>Property PID</th>\n                            <th>Survey Number</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {row}\n                        </tbody>\n                      </Table>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </LoadingContainer>\n          </DrizzleProvider>\n        </div>\n      </>\n\n    );\n\n  }\n}\n\nexport default OwnedLands;"]},"metadata":{},"sourceType":"module"}