{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\src\\\\views\\\\MakePayment.js\";\nimport React, { Component } from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\";\nimport Land from \"../artifacts/Land.json\";\nimport getWeb3 from \"../getWeb3\";\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { DrizzleProvider } from 'drizzle-react';\nimport { Spinner } from 'react-bootstrap';\nimport { LoadingContainer, AccountData, ContractData, ContractForm } from 'drizzle-react-components';\nimport \"../index.css\"; // reactstrap components\n\nimport { Button, ButtonGroup, Card, CardHeader, CardBody, CardTitle, Table, Row, Col, UncontrolledTooltip } from \"reactstrap\";\nvar drizzleOptions = {\n  contracts: [Land]\n};\nvar row = [];\nvar landOwner = [];\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _this.makePayment = function (seller_address, amount, land_id) {\n      return (\n        /*#__PURE__*/\n        _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee() {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  // alert(amount);\n                  amount = amount * 0.0000057;\n                  alert(amount);\n                  _context.next = 4;\n                  return _this.state.LandInstance.methods.payment(seller_address, land_id).send({\n                    from: _this.state.account,\n                    value: _this.state.web3.utils.toWei(amount.toString(), \"ether\"),\n                    gas: 2100000\n                  }).then(function (response) {\n                    _this.props.history.push(\"#\");\n                  });\n\n                case 4:\n                  //Reload\n                  window.location.reload(false);\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }))\n      );\n    };\n\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var web3, accounts, networkId, deployedNetwork, instance, currentAddress, registered, count, dict, i, address, paid, price;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              //For refreshing page only once\n              if (!window.location.hash) {\n                console.log(window.location.hash);\n                window.location = window.location + '#loaded';\n                window.location.reload();\n              }\n\n              _context2.prev = 1;\n              _context2.next = 4;\n              return getWeb3();\n\n            case 4:\n              web3 = _context2.sent;\n              _context2.next = 7;\n              return web3.eth.getAccounts();\n\n            case 7:\n              accounts = _context2.sent;\n              _context2.next = 10;\n              return web3.eth.net.getId();\n\n            case 10:\n              networkId = _context2.sent;\n              deployedNetwork = Land.networks[networkId];\n              instance = new web3.eth.Contract(Land.abi, deployedNetwork && deployedNetwork.address);\n\n              _this.setState({\n                LandInstance: instance,\n                web3: web3,\n                account: accounts[0]\n              });\n\n              _context2.next = 16;\n              return web3.currentProvider.selectedAddress;\n\n            case 16:\n              currentAddress = _context2.sent;\n              console.log(currentAddress);\n              _context2.next = 20;\n              return _this.state.LandInstance.methods.isBuyer(currentAddress).call();\n\n            case 20:\n              registered = _context2.sent;\n              console.log(registered);\n\n              _this.setState({\n                registered: registered\n              });\n\n              _context2.next = 25;\n              return _this.state.LandInstance.methods.getLandsCount().call();\n\n            case 25:\n              count = _context2.sent;\n              count = parseInt(count);\n              console.log(typeof count);\n              console.log(count);\n              dict = {};\n              i = 1;\n\n            case 31:\n              if (!(i < count + 1)) {\n                _context2.next = 39;\n                break;\n              }\n\n              _context2.next = 34;\n              return _this.state.LandInstance.methods.getLandOwner(i).call();\n\n            case 34:\n              address = _context2.sent;\n              dict[i] = address;\n\n            case 36:\n              i++;\n              _context2.next = 31;\n              break;\n\n            case 39:\n              i = 0;\n\n            case 40:\n              if (!(i < count)) {\n                _context2.next = 51;\n                break;\n              }\n\n              _context2.next = 43;\n              return _this.state.LandInstance.methods.isPaid(i + 1).call();\n\n            case 43:\n              paid = _context2.sent;\n              _context2.next = 46;\n              return _this.state.LandInstance.methods.getPrice(i + 1).call();\n\n            case 46:\n              price = _context2.sent;\n              row.push(React.createElement(\"tr\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 118\n                },\n                __self: this\n              }, React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 118\n                },\n                __self: this\n              }, i + 1), React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 118\n                },\n                __self: this\n              }, dict[i + 1]), React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 118\n                },\n                __self: this\n              }, price), React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 119\n                },\n                __self: this\n              }, React.createElement(Button, {\n                onClick: _this.makePayment(dict[i + 1], price, i + 1),\n                disabled: paid,\n                className: \"btn btn-success\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 120\n                },\n                __self: this\n              }, \"Make Payment\"))));\n\n            case 48:\n              i++;\n              _context2.next = 40;\n              break;\n\n            case 51:\n              console.log(row);\n              _context2.next = 58;\n              break;\n\n            case 54:\n              _context2.prev = 54;\n              _context2.t0 = _context2[\"catch\"](1);\n              // Catch any errors for any of the above operations.\n              alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n              console.error(_context2.t0);\n\n            case 58:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this, [[1, 54]]);\n    }));\n    _this.state = {\n      LandInstance: undefined,\n      account: null,\n      web3: null,\n      count: 0,\n      requested: false\n    };\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.state.web3) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, React.createElement(Spinner, {\n          animation: \"border\",\n          variant: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }))));\n      }\n\n      if (!this.state.registered) {\n        return React.createElement(\"div\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, React.createElement(Col, {\n          xs: \"6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, React.createElement(Card, {\n          className: \"card-chart\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, React.createElement(CardBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, \"You are not verified to view this page\")))))));\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(DrizzleProvider, {\n        options: drizzleOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(LoadingContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"12\",\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Payment for Lands\", React.createElement(\"span\", {\n        className: \"duration\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"\\u20B9 1 = 0.0000057 Ether\"))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: \"tablesorter\",\n        responsive: true,\n        color: \"black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        className: \"text-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"#\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Land Owner\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"Price ( in \\u20B9 )\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Make Payment\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, row))))))))));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["C:\\Users\\prith\\Desktop\\New folder (5)\\starter_kit-master\\LandRegisteration\\src\\views\\MakePayment.js"],"names":["React","Component","classNames","Land","getWeb3","DrizzleProvider","Spinner","LoadingContainer","AccountData","ContractData","ContractForm","Button","ButtonGroup","Card","CardHeader","CardBody","CardTitle","Table","Row","Col","UncontrolledTooltip","drizzleOptions","contracts","row","landOwner","Dashboard","props","makePayment","seller_address","amount","land_id","alert","state","LandInstance","methods","payment","send","from","account","value","web3","utils","toWei","toString","gas","then","response","history","push","window","location","reload","componentDidMount","hash","console","log","eth","getAccounts","accounts","net","getId","networkId","deployedNetwork","networks","instance","Contract","abi","address","setState","currentProvider","selectedAddress","currentAddress","isBuyer","call","registered","getLandsCount","count","parseInt","dict","i","getLandOwner","isPaid","paid","getPrice","price","error","undefined","requested"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\nimport Land from \"../artifacts/Land.json\";\nimport getWeb3 from \"../getWeb3\";\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { DrizzleProvider } from 'drizzle-react';\nimport { Spinner } from 'react-bootstrap'\nimport {\n  LoadingContainer,\n  AccountData,\n  ContractData,\n  ContractForm\n} from 'drizzle-react-components'\nimport \"../index.css\";\n// reactstrap components\nimport {\n  Button,\n  ButtonGroup,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n  UncontrolledTooltip,\n} from \"reactstrap\";\n\n\n\nconst drizzleOptions = {\n  contracts: [Land]\n}\n\n\nvar row = [];\nvar landOwner = [];\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      LandInstance: undefined,\n      account: null,\n      web3: null,\n      count: 0,\n      requested: false,\n    }\n  }\n\n\n  makePayment = (seller_address, amount, land_id) => async () => {\n    // alert(amount);\n\n    amount = amount*0.0000057;\n    alert(amount);\n    await this.state.LandInstance.methods.payment(\n      seller_address,\n      land_id\n    ).send({\n      from: this.state.account,\n      value: this.state.web3.utils.toWei(amount.toString(), \"ether\"),\n      gas: 2100000\n    }).then(response => {\n      this.props.history.push(\"#\");\n    });\n    //Reload\n    window.location.reload(false);\n\n  }\n\n  componentDidMount = async () => {\n    //For refreshing page only once\n    if (!window.location.hash) {\n      console.log(window.location.hash);\n      window.location = window.location + '#loaded';\n      window.location.reload();\n    }\n\n    try {\n      //Get network provider and web3 instance\n      const web3 = await getWeb3();\n\n      const accounts = await web3.eth.getAccounts();\n\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = Land.networks[networkId];\n      const instance = new web3.eth.Contract(\n        Land.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      this.setState({ LandInstance: instance, web3: web3, account: accounts[0] });\n\n      const currentAddress = await web3.currentProvider.selectedAddress;\n      console.log(currentAddress);\n      var registered = await this.state.LandInstance.methods.isBuyer(currentAddress).call();\n      console.log(registered);\n      this.setState({ registered: registered });\n      var count = await this.state.LandInstance.methods.getLandsCount().call();\n      count = parseInt(count);\n      console.log(typeof (count));\n      console.log(count);\n\n\n\n      var dict = {}\n      for (var i = 1; i < count + 1; i++) {\n        var address = await this.state.LandInstance.methods.getLandOwner(i).call();\n        dict[i] = address;\n      }\n\n      for (var i = 0; i < count; i++) {\n        var paid = await this.state.LandInstance.methods.isPaid(i + 1).call();\n        var price = await this.state.LandInstance.methods.getPrice(i + 1).call();\n        row.push(<tr><td>{i + 1}</td><td>{dict[i + 1]}</td><td>{price}</td>\n          <td>\n            <Button onClick={this.makePayment(dict[i + 1], price, i+1)} \n            disabled={paid} className=\"btn btn-success\">\n              Make Payment\n            </Button>\n          </td>\n        </tr>)\n\n      }\n      console.log(row);\n\n\n\n\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n\n\n  render() {\n    if (!this.state.web3) {\n      return (\n        <div>\n          <div>\n            <h1>\n              <Spinner animation=\"border\" variant=\"primary\" />\n            </h1>\n          </div>\n\n        </div>\n      );\n    }\n\n    if (!this.state.registered) {\n      return (\n        <div className=\"content\">\n          <div>\n            <Row>\n              <Col xs=\"6\">\n                <Card className=\"card-chart\">\n                  <CardBody>\n                    <h1>\n                      You are not verified to view this page\n                                        </h1>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n\n        </div>\n      );\n    }\n\n    return (\n      <>\n        <div className=\"content\">\n          <DrizzleProvider options={drizzleOptions}>\n            <LoadingContainer>\n              <Row>\n                <Col lg=\"12\" md=\"12\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle tag=\"h4\">Payment for Lands<span className=\"duration\">₹ 1 = 0.0000057 Ether</span></CardTitle>\n\n                    </CardHeader>\n                    <CardBody>\n                      <Table className=\"tablesorter\" responsive color=\"black\">\n                        <thead className=\"text-primary\">\n                          <tr>\n                            <th>#</th>\n                            <th>Land Owner</th>\n                            <th>Price ( in ₹ )</th>\n                            <th>Make Payment</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {row}\n                        </tbody>\n                      </Table>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </LoadingContainer>\n          </DrizzleProvider>\n        </div>\n      </>\n\n    );\n  }\n}\n\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}