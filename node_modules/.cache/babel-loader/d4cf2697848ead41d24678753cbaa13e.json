{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\src\\\\views\\\\TransactionInfo.js\";\nimport React, { Component } from 'react';\nimport Land from \"../artifacts/Land.json\";\nimport getWeb3 from \"../getWeb3\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport '../index.css';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { DrizzleProvider } from '@drizzle/react-plugin';\nimport { Spinner } from 'react-bootstrap';\nimport { LoadingContainer, AccountData, ContractData, ContractForm } from 'drizzle-react-components'; // reactstrap components\n\nimport { Button, ButtonGroup, Card, CardHeader, CardBody, CardTitle, DropdownToggle, DropdownMenu, DropdownItem, UncontrolledDropdown, Label, FormGroup, Input, Table, Row, Col, UncontrolledTooltip } from \"reactstrap\";\nvar drizzleOptions = {\n  contracts: [Land]\n};\nvar landTable = [];\nvar completed = true;\n\nvar TransactionInfo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TransactionInfo, _Component);\n\n  function TransactionInfo(props) {\n    var _this;\n\n    _classCallCheck(this, TransactionInfo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TransactionInfo).call(this, props));\n\n    _this.landTransfer = function (landId, newOwner) {\n      return (\n        /*#__PURE__*/\n        _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee() {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return _this.state.LandInstance.methods.LandOwnershipTransfer(landId, newOwner).send({\n                    from: _this.state.account,\n                    gas: 2100000\n                  });\n\n                case 2:\n                  //Reload\n                  console.log(newOwner);\n                  console.log(completed); // this.setState({completed:false});\n\n                  completed = false;\n                  console.log(completed);\n                  window.location.reload(false);\n\n                case 7:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }))\n      );\n    };\n\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var web3, accounts, currentAddress, networkId, deployedNetwork, instance, verified, count, rowsArea, rowsCity, rowsState, rowsPrice, rowsPID, rowsSurvey, i, request, approved, disabled, owner;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              //For refreshing page only once\n              if (!window.location.hash) {\n                window.location = window.location + '#loaded';\n                window.location.reload();\n              }\n\n              _context2.prev = 1;\n              _context2.next = 4;\n              return getWeb3();\n\n            case 4:\n              web3 = _context2.sent;\n              _context2.next = 7;\n              return web3.eth.getAccounts();\n\n            case 7:\n              accounts = _context2.sent;\n              _context2.next = 10;\n              return web3.currentProvider.selectedAddress;\n\n            case 10:\n              currentAddress = _context2.sent;\n              _context2.next = 13;\n              return web3.eth.net.getId();\n\n            case 13:\n              networkId = _context2.sent;\n              deployedNetwork = Land.networks[networkId];\n              instance = new web3.eth.Contract(Land.abi, deployedNetwork && deployedNetwork.address);\n\n              _this.setState({\n                LandInstance: instance,\n                web3: web3,\n                account: accounts[0]\n              });\n\n              _context2.next = 19;\n              return _this.state.LandInstance.methods.isLandInspector(currentAddress).call();\n\n            case 19:\n              verified = _context2.sent;\n\n              //console.log(verified);\n              _this.setState({\n                verified: verified\n              });\n\n              _context2.next = 23;\n              return _this.state.LandInstance.methods.getLandsCount().call();\n\n            case 23:\n              count = _context2.sent;\n              count = parseInt(count);\n              rowsArea = [];\n              rowsCity = [];\n              rowsState = [];\n              rowsPrice = [];\n              rowsPID = [];\n              rowsSurvey = [];\n\n              for (i = 1; i < count + 1; i++) {\n                rowsArea.push(React.createElement(ContractData, {\n                  contract: \"Land\",\n                  method: \"getArea\",\n                  methodArgs: [i, {\n                    from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\"\n                  }],\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 117\n                  },\n                  __self: this\n                }));\n                rowsCity.push(React.createElement(ContractData, {\n                  contract: \"Land\",\n                  method: \"getCity\",\n                  methodArgs: [i, {\n                    from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\"\n                  }],\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 118\n                  },\n                  __self: this\n                }));\n                rowsState.push(React.createElement(ContractData, {\n                  contract: \"Land\",\n                  method: \"getState\",\n                  methodArgs: [i, {\n                    from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\"\n                  }],\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 119\n                  },\n                  __self: this\n                }));\n                rowsPrice.push(React.createElement(ContractData, {\n                  contract: \"Land\",\n                  method: \"getPrice\",\n                  methodArgs: [i, {\n                    from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\"\n                  }],\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 120\n                  },\n                  __self: this\n                }));\n                rowsPID.push(React.createElement(ContractData, {\n                  contract: \"Land\",\n                  method: \"getPID\",\n                  methodArgs: [i, {\n                    from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\"\n                  }],\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 121\n                  },\n                  __self: this\n                }));\n                rowsSurvey.push(React.createElement(ContractData, {\n                  contract: \"Land\",\n                  method: \"getSurveyNumber\",\n                  methodArgs: [i, {\n                    from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\"\n                  }],\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 122\n                  },\n                  __self: this\n                }));\n              }\n\n              i = 0;\n\n            case 33:\n              if (!(i < count)) {\n                _context2.next = 51;\n                break;\n              }\n\n              _context2.next = 36;\n              return _this.state.LandInstance.methods.getRequestDetails(i + 1).call();\n\n            case 36:\n              request = _context2.sent;\n              _context2.next = 39;\n              return _this.state.LandInstance.methods.isApproved(i + 1).call();\n\n            case 39:\n              approved = _context2.sent;\n              // console.log(approved);\n              // console.log(request[3]);\n              disabled = request[3] && completed;\n              console.log(\"Disabled: \", disabled);\n              console.log(\"request[3]: \", request[3]);\n              console.log(\"completed: \", completed);\n              _context2.next = 46;\n              return _this.state.LandInstance.methods.getLandOwner(i + 1).call();\n\n            case 46:\n              owner = _context2.sent;\n              landTable.push(React.createElement(\"tr\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 135\n                },\n                __self: this\n              }, React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 135\n                },\n                __self: this\n              }, i + 1), React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 135\n                },\n                __self: this\n              }, owner), React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 135\n                },\n                __self: this\n              }, rowsArea[i]), React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 135\n                },\n                __self: this\n              }, rowsCity[i]), React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 135\n                },\n                __self: this\n              }, rowsState[i]), React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 135\n                },\n                __self: this\n              }, rowsPrice[i]), React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 135\n                },\n                __self: this\n              }, rowsPID[i]), React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 135\n                },\n                __self: this\n              }, rowsSurvey[i]), React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 136\n                },\n                __self: this\n              }, React.createElement(Button, {\n                onClick: _this.landTransfer(i + 1, request[1]),\n                disabled: !disabled,\n                className: \"button-vote\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 137\n                },\n                __self: this\n              }, \"Verify Transaction\"))));\n\n            case 48:\n              i++;\n              _context2.next = 33;\n              break;\n\n            case 51:\n              _context2.next = 57;\n              break;\n\n            case 53:\n              _context2.prev = 53;\n              _context2.t0 = _context2[\"catch\"](1);\n              // Catch any errors for any of the above operations.\n              alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n              console.error(_context2.t0);\n\n            case 57:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this, [[1, 53]]);\n    }));\n    _this.state = {\n      LandInstance: undefined,\n      account: null,\n      web3: null,\n      verified: ''\n    };\n    return _this;\n  }\n\n  _createClass(TransactionInfo, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.state.web3) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, React.createElement(Spinner, {\n          animation: \"border\",\n          variant: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }))));\n      }\n\n      if (!this.state.verified) {\n        return React.createElement(\"div\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, React.createElement(Col, {\n          xs: \"6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, React.createElement(Card, {\n          className: \"card-chart\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, React.createElement(CardBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, \"You are not verified to view this page\")))))));\n      }\n\n      return React.createElement(DrizzleProvider, {\n        options: drizzleOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(LoadingContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Lands Info\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: \"tablesorter\",\n        responsive: true,\n        color: \"black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        className: \"text-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"#\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Owner ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Area\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"City\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"State\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"Price\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Property PID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Survey Number\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Verify Land Transfer\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, landTable)))))))));\n    }\n  }]);\n\n  return TransactionInfo;\n}(Component);\n\nexport default TransactionInfo;","map":{"version":3,"sources":["C:\\Users\\prith\\Desktop\\New folder (5)\\starter_kit-master\\LandRegisteration\\src\\views\\TransactionInfo.js"],"names":["React","Component","Land","getWeb3","Line","Bar","DrizzleProvider","Spinner","LoadingContainer","AccountData","ContractData","ContractForm","Button","ButtonGroup","Card","CardHeader","CardBody","CardTitle","DropdownToggle","DropdownMenu","DropdownItem","UncontrolledDropdown","Label","FormGroup","Input","Table","Row","Col","UncontrolledTooltip","drizzleOptions","contracts","landTable","completed","TransactionInfo","props","landTransfer","landId","newOwner","state","LandInstance","methods","LandOwnershipTransfer","send","from","account","gas","console","log","window","location","reload","componentDidMount","hash","web3","eth","getAccounts","accounts","currentProvider","selectedAddress","currentAddress","net","getId","networkId","deployedNetwork","networks","instance","Contract","abi","address","setState","isLandInspector","call","verified","getLandsCount","count","parseInt","rowsArea","rowsCity","rowsState","rowsPrice","rowsPID","rowsSurvey","i","push","getRequestDetails","request","isApproved","approved","disabled","getLandOwner","owner","alert","error","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Land from \"../artifacts/Land.json\";\nimport getWeb3 from \"../getWeb3\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport '../index.css';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { DrizzleProvider } from '@drizzle/react-plugin';\nimport { Spinner } from 'react-bootstrap'\nimport {\n    LoadingContainer,\n    AccountData,\n    ContractData,\n    ContractForm\n} from 'drizzle-react-components'\n\n// reactstrap components\nimport {\n    Button,\n    ButtonGroup,\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    UncontrolledDropdown,\n    Label,\n    FormGroup,\n    Input,\n    Table,\n    Row,\n    Col,\n    UncontrolledTooltip,\n} from \"reactstrap\";\n\n\nconst drizzleOptions = {\n    contracts: [Land]\n}\n\n\nvar landTable = [];\nvar completed = true;\n\nclass TransactionInfo extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            LandInstance: undefined,\n            account: null,\n            web3: null,\n            verified: '',\n        }\n    }\n\n    landTransfer = (landId, newOwner) => async () => {\n        \n        await this.state.LandInstance.methods.LandOwnershipTransfer(\n            landId, newOwner\n        ).send({\n            from : this.state.account,\n            gas : 2100000\n        });\n        //Reload\n        console.log(newOwner);\n        console.log(completed);\n        // this.setState({completed:false});\n        completed = false;\n        console.log(completed);\n\n        window.location.reload(false);\n\n    }\n\n\n    componentDidMount = async () => {\n        //For refreshing page only once\n        if (!window.location.hash) {\n            window.location = window.location + '#loaded';\n            window.location.reload();\n        }\n\n        try {\n            //Get network provider and web3 instance\n            const web3 = await getWeb3();\n\n            const accounts = await web3.eth.getAccounts();\n\n            const currentAddress = await web3.currentProvider.selectedAddress;\n            //console.log(currentAddress);\n            const networkId = await web3.eth.net.getId();\n            const deployedNetwork = Land.networks[networkId];\n            const instance = new web3.eth.Contract(\n                Land.abi,\n                deployedNetwork && deployedNetwork.address,\n            );\n\n            this.setState({ LandInstance: instance, web3: web3, account: accounts[0] });\n            \n            var verified = await this.state.LandInstance.methods.isLandInspector(currentAddress).call();\n            //console.log(verified);\n            this.setState({ verified: verified });\n            \n            var count = await this.state.LandInstance.methods.getLandsCount().call();\n            count = parseInt(count);\n            var rowsArea = [];\n            var rowsCity = [];\n            var rowsState = [];\n            var rowsPrice = [];\n            var rowsPID = [];\n            var rowsSurvey = [];\n\n\n            for (var i = 1; i < count + 1; i++) {\n                rowsArea.push(<ContractData contract=\"Land\" method=\"getArea\" methodArgs={[i, { from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\" }]} />);\n                rowsCity.push(<ContractData contract=\"Land\" method=\"getCity\" methodArgs={[i, { from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\" }]} />);\n                rowsState.push(<ContractData contract=\"Land\" method=\"getState\" methodArgs={[i, { from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\" }]} />);\n                rowsPrice.push(<ContractData contract=\"Land\" method=\"getPrice\" methodArgs={[i, { from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\" }]} />);\n                rowsPID.push(<ContractData contract=\"Land\" method=\"getPID\" methodArgs={[i, { from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\" }]} />);\n                rowsSurvey.push(<ContractData contract=\"Land\" method=\"getSurveyNumber\" methodArgs={[i, { from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\" }]} />);\n              }\n            for (var i = 0; i < count; i++) {\n                var request = await this.state.LandInstance.methods.getRequestDetails(i+1).call();\n                var approved = await this.state.LandInstance.methods.isApproved(i+1).call();\n                // console.log(approved);\n                // console.log(request[3]);\n                var disabled = request[3]&&completed;\n                console.log(\"Disabled: \", disabled);\n                console.log(\"request[3]: \", request[3]);\n                console.log(\"completed: \", completed);\n\n                var owner = await this.state.LandInstance.methods.getLandOwner(i+1).call();\n                landTable.push(<tr><td>{i+1}</td><td>{owner}</td><td>{rowsArea[i]}</td><td>{rowsCity[i]}</td><td>{rowsState[i]}</td><td>{rowsPrice[i]}</td><td>{rowsPID[i]}</td><td>{rowsSurvey[i]}</td>\n                <td>\n                     <Button onClick={this.landTransfer(i+1, request[1])} disabled={!disabled} className=\"button-vote\">\n                          Verify Transaction\n                    </Button>\n                </td>\n                </tr>)\n\n\n            }\n\n\n        } catch (error) {\n            // Catch any errors for any of the above operations.\n            alert(\n                `Failed to load web3, accounts, or contract. Check console for details.`,\n            );\n            console.error(error);\n        }\n    };\n\n\n\n    render() {\n        if (!this.state.web3) {\n            return (\n                <div>\n                    <div>\n                        <h1>\n                            <Spinner animation=\"border\" variant=\"primary\" />\n                        </h1>\n                    </div>\n\n                </div>\n            );\n        }\n\n        if (!this.state.verified) {\n            return (\n                <div className=\"content\">\n                    <div>\n                        <Row>\n                            <Col xs=\"6\">\n                                <Card className=\"card-chart\">\n                                    <CardBody>\n                                        <h1>\n                                            You are not verified to view this page\n                                        </h1>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </div>\n\n                </div>\n            );\n        }\n\n        return (\n            <DrizzleProvider options={drizzleOptions}>\n                <LoadingContainer>\n                    <div className=\"content\">\n                        <Row>\n                            <Col xs=\"12\">\n                                <Card>\n                                    <CardHeader>\n                                        <CardTitle tag=\"h6\">Lands Info</CardTitle>\n                                    </CardHeader>\n                                    <CardBody>\n                                        <Table className=\"tablesorter\" responsive color=\"black\">\n                                            <thead className=\"text-primary\">\n                                                <tr>\n                                                <th>#</th>\n                                                <th>Owner ID</th>\n                                                <th>Area</th>\n                                                <th>City</th>\n                                                <th>State</th>\n                                                <th>Price</th>\n                                                <th>Property PID</th>\n                                                <th>Survey Number</th>\n                                                <th>Verify Land Transfer</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {landTable}\n                                            </tbody>\n                                        </Table>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n\n                    </div>\n                </LoadingContainer>\n            </DrizzleProvider>\n        );\n\n    }\n}\n\nexport default TransactionInfo;\n"]},"metadata":{},"sourceType":"module"}