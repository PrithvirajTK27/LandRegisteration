{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\src\\\\components\\\\Navbars\\\\AdminNavbar.js\";\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // reactstrap components\n\nimport { Button, Collapse, DropdownToggle, DropdownMenu, DropdownItem, UncontrolledDropdown, Input, InputGroup, NavbarBrand, Navbar, NavLink, Nav, Container, Modal, NavbarToggler, ModalHeader } from \"reactstrap\";\n\nfunction AdminNavbar(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      collapseOpen = _React$useState2[0],\n      setcollapseOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      modalSearch = _React$useState4[0],\n      setmodalSearch = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"navbar-transparent\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      color = _React$useState6[0],\n      setcolor = _React$useState6[1];\n\n  React.useEffect(function () {\n    window.addEventListener(\"resize\", updateColor); // Specify how to clean up after this effect:\n\n    return function cleanup() {\n      window.removeEventListener(\"resize\", updateColor);\n    };\n  }); // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n\n  var updateColor = function updateColor() {\n    if (window.innerWidth < 993 && collapseOpen) {\n      setcolor(\"bg-white\");\n    } else {\n      setcolor(\"navbar-transparent\");\n    }\n  }; // this function opens and closes the collapse on small devices\n\n\n  var toggleCollapse = function toggleCollapse() {\n    if (collapseOpen) {\n      setcolor(\"navbar-transparent\");\n    } else {\n      setcolor(\"bg-white\");\n    }\n\n    setcollapseOpen(!collapseOpen);\n  }; // this function is to open the Search modal\n\n\n  var toggleModalSearch = function toggleModalSearch() {\n    setmodalSearch(!modalSearch);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Navbar, {\n    className: classNames(\"navbar-absolute\", color),\n    expand: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Container, {\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"navbar-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classNames(\"navbar-toggle d-inline\", {\n      toggled: props.sidebarOpened\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(NavbarToggler, {\n    onClick: props.toggleSidebar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"navbar-toggler-bar bar1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"navbar-toggler-bar bar2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"navbar-toggler-bar bar3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }))), React.createElement(NavbarBrand, {\n    href: \"#pablo\",\n    onClick: function onClick(e) {\n      return e.preventDefault();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, props.brandText)), React.createElement(NavbarToggler, {\n    onClick: toggleCollapse,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"navbar-toggler-bar navbar-kebab\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"navbar-toggler-bar navbar-kebab\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"navbar-toggler-bar navbar-kebab\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), React.createElement(Collapse, {\n    navbar: true,\n    isOpen: collapseOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    className: \"ml-auto\",\n    navbar: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"/Help\",\n    className: \"faq\",\n    style: {\n      borderRadius: \"10%\",\n      textDecoration: \"none\",\n      fontWeight: \"bolder\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    style: {\n      color: \"black\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Help?\")), React.createElement(\"li\", {\n    className: \"separator d-lg-none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }))))), React.createElement(Modal, {\n    modalClassName: \"modal-search\",\n    isOpen: modalSearch,\n    toggle: toggleModalSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"SEARCH\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    \"aria-label\": \"Close\",\n    className: \"close\",\n    onClick: toggleModalSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"tim-icons icon-simple-remove\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })))));\n}\n\nexport default AdminNavbar;","map":{"version":3,"sources":["C:\\Users\\prith\\Desktop\\New folder (5)\\starter_kit-master\\LandRegisteration\\src\\components\\Navbars\\AdminNavbar.js"],"names":["React","classNames","Button","Collapse","DropdownToggle","DropdownMenu","DropdownItem","UncontrolledDropdown","Input","InputGroup","NavbarBrand","Navbar","NavLink","Nav","Container","Modal","NavbarToggler","ModalHeader","AdminNavbar","props","useState","collapseOpen","setcollapseOpen","modalSearch","setmodalSearch","color","setcolor","useEffect","window","addEventListener","updateColor","cleanup","removeEventListener","innerWidth","toggleCollapse","toggleModalSearch","toggled","sidebarOpened","toggleSidebar","e","preventDefault","brandText","borderRadius","textDecoration","fontWeight"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\n// reactstrap components\nimport {\n  Button,\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Input,\n  InputGroup,\n  NavbarBrand,\n  Navbar,\n  NavLink,\n  Nav,\n  Container,\n  Modal,\n  NavbarToggler,\n  ModalHeader,\n} from \"reactstrap\";\n\nfunction AdminNavbar(props) {\n  const [collapseOpen, setcollapseOpen] = React.useState(false);\n  const [modalSearch, setmodalSearch] = React.useState(false);\n  const [color, setcolor] = React.useState(\"navbar-transparent\");\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateColor);\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      window.removeEventListener(\"resize\", updateColor);\n    };\n  });\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  const updateColor = () => {\n    if (window.innerWidth < 993 && collapseOpen) {\n      setcolor(\"bg-white\");\n    } else {\n      setcolor(\"navbar-transparent\");\n    }\n  };\n  // this function opens and closes the collapse on small devices\n  const toggleCollapse = () => {\n    if (collapseOpen) {\n      setcolor(\"navbar-transparent\");\n    } else {\n      setcolor(\"bg-white\");\n    }\n    setcollapseOpen(!collapseOpen);\n  };\n  // this function is to open the Search modal\n  const toggleModalSearch = () => {\n    setmodalSearch(!modalSearch);\n  };\n  return (\n    <>\n      <Navbar className={classNames(\"navbar-absolute\", color)} expand=\"lg\">\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div\n              className={classNames(\"navbar-toggle d-inline\", {\n                toggled: props.sidebarOpened,\n              })}\n            >\n              <NavbarToggler onClick={props.toggleSidebar}>\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </NavbarToggler>\n            </div>\n            <NavbarBrand href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n              {props.brandText}\n            </NavbarBrand>\n          </div>\n          <NavbarToggler onClick={toggleCollapse}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler>\n          <Collapse navbar isOpen={collapseOpen}>\n            <Nav className=\"ml-auto\" navbar>\n            <a href =\"/Help\" className=\"faq\" style={{borderRadius: \"10%\", textDecoration: \"none\", fontWeight: \"bolder\"}} >\n                 <h3 style={{color: \"black\"}}>Help?</h3>\n              </a>\n              \n              \n              <li className=\"separator d-lg-none\" />\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n      <Modal\n        modalClassName=\"modal-search\"\n        isOpen={modalSearch}\n        toggle={toggleModalSearch}\n      >\n        <ModalHeader>\n          <Input placeholder=\"SEARCH\" type=\"text\" />\n          <button\n            aria-label=\"Close\"\n            className=\"close\"\n            onClick={toggleModalSearch}\n          >\n            <i className=\"tim-icons icon-simple-remove\" />\n          </button>\n        </ModalHeader>\n      </Modal>\n    </>\n  );\n}\n\nexport default AdminNavbar;\n"]},"metadata":{},"sourceType":"module"}