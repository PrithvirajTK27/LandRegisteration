{"ast":null,"code":"/* eslint-disable no-undef */\n'use strict';\n\nvar _defineProperty = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/defineProperty\");\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _objectSpread = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _wrapAsyncGenerator = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/wrapAsyncGenerator\");\n\nvar _awaitAsyncGenerator = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/awaitAsyncGenerator\");\n\nvar _asyncIterator = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncIterator\");\n\nvar _asyncGeneratorDelegate = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncGeneratorDelegate\");\n\nvar _require = require('./http/fetch'),\n    _fetch = _require.fetch,\n    Request = _require.Request,\n    Headers = _require.Headers;\n\nvar _require2 = require('./http/error'),\n    TimeoutError = _require2.TimeoutError,\n    HTTPError = _require2.HTTPError;\n\nvar merge = require('merge-options').bind({\n  ignoreUndefined: true\n});\n\nvar _require3 = require('iso-url'),\n    URL = _require3.URL,\n    URLSearchParams = _require3.URLSearchParams;\n\nvar anySignal = require('any-signal');\n/**\n * @typedef {import('stream').Readable} NodeReadableStream\n * @typedef {import('./types').HTTPOptions} HTTPOptions\n * @typedef {import('./types').ExtendedResponse} ExtendedResponse\n */\n\n/**\n * @template TResponse\n * @param {Promise<TResponse>} promise\n * @param {number | undefined} ms\n * @param {AbortController} abortController\n * @returns {Promise<TResponse>}\n */\n\n\nvar timeout = function timeout(promise, ms, abortController) {\n  if (ms === undefined) {\n    return promise;\n  }\n\n  var start = Date.now();\n\n  var timedOut = function timedOut() {\n    var time = Date.now() - start;\n    return time >= ms;\n  };\n\n  return new Promise(function (resolve, reject) {\n    var timeoutID = setTimeout(function () {\n      if (timedOut()) {\n        reject(new TimeoutError());\n        abortController.abort();\n      }\n    }, ms);\n    /**\n     * @param {(value: any) => void } next\n     */\n\n    var after = function after(next) {\n      /**\n       * @param {any} res\n       */\n      var fn = function fn(res) {\n        clearTimeout(timeoutID);\n\n        if (timedOut()) {\n          reject(new TimeoutError());\n          return;\n        }\n\n        next(res);\n      };\n\n      return fn;\n    };\n\n    promise.then(after(resolve), after(reject));\n  });\n};\n\nvar defaults = {\n  throwHttpErrors: true,\n  credentials: 'same-origin'\n};\n\nvar HTTP =\n/*#__PURE__*/\nfunction () {\n  /**\n   *\n   * @param {HTTPOptions} options\n   */\n  function HTTP() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, HTTP);\n\n    /** @type {HTTPOptions} */\n    this.opts = merge(defaults, options);\n  }\n  /**\n   * Fetch\n   *\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   * @returns {Promise<ExtendedResponse>}\n   */\n\n\n  _createClass(HTTP, [{\n    key: \"fetch\",\n    value: function () {\n      var _fetch2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(resource) {\n        var options,\n            opts,\n            headers,\n            url,\n            searchParams,\n            transformSearchParams,\n            json,\n            abortController,\n            signal,\n            response,\n            _args3 = arguments;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                options = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {};\n\n                /** @type {HTTPOptions} */\n                opts = merge(this.opts, options); // @ts-expect-error\n\n                headers = new Headers(opts.headers); // validate resource type\n                // @ts-expect-error\n\n                if (!(typeof resource !== 'string' && !(resource instanceof URL || resource instanceof Request))) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                throw new TypeError('`resource` must be a string, URL, or Request');\n\n              case 5:\n                url = new URL(resource.toString(), opts.base);\n                searchParams = opts.searchParams, transformSearchParams = opts.transformSearchParams, json = opts.json;\n\n                if (searchParams) {\n                  if (typeof transformSearchParams === 'function') {\n                    // @ts-ignore\n                    url.search = transformSearchParams(new URLSearchParams(opts.searchParams));\n                  } else {\n                    // @ts-ignore\n                    url.search = new URLSearchParams(opts.searchParams);\n                  }\n                }\n\n                if (json) {\n                  opts.body = JSON.stringify(opts.json);\n                  headers.set('content-type', 'application/json');\n                }\n\n                abortController = new AbortController(); // @ts-ignore\n\n                signal = anySignal([abortController.signal, opts.signal]);\n                /** @type {ExtendedResponse} */\n                // @ts-expect-error additional fields are assigned below\n\n                _context3.next = 13;\n                return timeout(_fetch(url.toString(), _objectSpread({}, opts, {\n                  signal: signal,\n                  // @ts-expect-error non-browser fetch implementations may take extra options\n                  timeout: undefined,\n                  headers: headers\n                })), opts.timeout, abortController);\n\n              case 13:\n                response = _context3.sent;\n\n                if (!(!response.ok && opts.throwHttpErrors)) {\n                  _context3.next = 19;\n                  break;\n                }\n\n                if (!opts.handleError) {\n                  _context3.next = 18;\n                  break;\n                }\n\n                _context3.next = 18;\n                return opts.handleError(response);\n\n              case 18:\n                throw new HTTPError(response);\n\n              case 19:\n                response.iterator =\n                /*#__PURE__*/\n                _wrapAsyncGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee() {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(fromStream(response.body)), _awaitAsyncGenerator), \"t0\", 1);\n\n                        case 1:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n                response.ndjson =\n                /*#__PURE__*/\n                _wrapAsyncGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee2() {\n                  var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, chunk;\n\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          _iteratorNormalCompletion = true;\n                          _didIteratorError = false;\n                          _context2.prev = 2;\n                          _iterator = _asyncIterator(ndjson(response.iterator()));\n\n                        case 4:\n                          _context2.next = 6;\n                          return _awaitAsyncGenerator(_iterator.next());\n\n                        case 6:\n                          _step = _context2.sent;\n                          _iteratorNormalCompletion = _step.done;\n                          _context2.next = 10;\n                          return _awaitAsyncGenerator(_step.value);\n\n                        case 10:\n                          _value = _context2.sent;\n\n                          if (_iteratorNormalCompletion) {\n                            _context2.next = 23;\n                            break;\n                          }\n\n                          chunk = _value;\n\n                          if (!options.transform) {\n                            _context2.next = 18;\n                            break;\n                          }\n\n                          _context2.next = 16;\n                          return options.transform(chunk);\n\n                        case 16:\n                          _context2.next = 20;\n                          break;\n\n                        case 18:\n                          _context2.next = 20;\n                          return chunk;\n\n                        case 20:\n                          _iteratorNormalCompletion = true;\n                          _context2.next = 4;\n                          break;\n\n                        case 23:\n                          _context2.next = 29;\n                          break;\n\n                        case 25:\n                          _context2.prev = 25;\n                          _context2.t0 = _context2[\"catch\"](2);\n                          _didIteratorError = true;\n                          _iteratorError = _context2.t0;\n\n                        case 29:\n                          _context2.prev = 29;\n                          _context2.prev = 30;\n\n                          if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                            _context2.next = 34;\n                            break;\n                          }\n\n                          _context2.next = 34;\n                          return _awaitAsyncGenerator(_iterator.return());\n\n                        case 34:\n                          _context2.prev = 34;\n\n                          if (!_didIteratorError) {\n                            _context2.next = 37;\n                            break;\n                          }\n\n                          throw _iteratorError;\n\n                        case 37:\n                          return _context2.finish(34);\n\n                        case 38:\n                          return _context2.finish(29);\n\n                        case 39:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2, null, [[2, 25, 29, 39], [30,, 34, 38]]);\n                }));\n                return _context3.abrupt(\"return\", response);\n\n              case 22:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function fetch(_x2) {\n        return _fetch2.apply(this, arguments);\n      }\n\n      return fetch;\n    }()\n    /**\n     * @param {string | Request} resource\n     * @param {HTTPOptions} options\n     */\n\n  }, {\n    key: \"post\",\n    value: function post(resource) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.fetch(resource, _objectSpread({}, options, {\n        method: 'POST'\n      }));\n    }\n    /**\n     * @param {string | Request} resource\n     * @param {HTTPOptions} options\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(resource) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.fetch(resource, _objectSpread({}, options, {\n        method: 'GET'\n      }));\n    }\n    /**\n     * @param {string | Request} resource\n     * @param {HTTPOptions} options\n     */\n\n  }, {\n    key: \"put\",\n    value: function put(resource) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.fetch(resource, _objectSpread({}, options, {\n        method: 'PUT'\n      }));\n    }\n    /**\n     * @param {string | Request} resource\n     * @param {HTTPOptions} options\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(resource) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.fetch(resource, _objectSpread({}, options, {\n        method: 'DELETE'\n      }));\n    }\n    /**\n     * @param {string | Request} resource\n     * @param {HTTPOptions} options\n     */\n\n  }, {\n    key: \"options\",\n    value: function options(resource) {\n      var _options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      return this.fetch(resource, _objectSpread({}, _options, {\n        method: 'OPTIONS'\n      }));\n    }\n  }]);\n\n  return HTTP;\n}();\n/**\n * Parses NDJSON chunks from an iterator\n *\n * @param {AsyncIterable<Uint8Array>} source\n * @returns {AsyncIterable<any>}\n */\n\n\nvar ndjson =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _wrapAsyncGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(source) {\n    var decoder, buf, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _value2, chunk, lines, i, l;\n\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            decoder = new TextDecoder();\n            buf = '';\n            _iteratorNormalCompletion2 = true;\n            _didIteratorError2 = false;\n            _context4.prev = 4;\n            _iterator2 = _asyncIterator(source);\n\n          case 6:\n            _context4.next = 8;\n            return _awaitAsyncGenerator(_iterator2.next());\n\n          case 8:\n            _step2 = _context4.sent;\n            _iteratorNormalCompletion2 = _step2.done;\n            _context4.next = 12;\n            return _awaitAsyncGenerator(_step2.value);\n\n          case 12:\n            _value2 = _context4.sent;\n\n            if (_iteratorNormalCompletion2) {\n              _context4.next = 30;\n              break;\n            }\n\n            chunk = _value2;\n            buf += decoder.decode(chunk, {\n              stream: true\n            });\n            lines = buf.split(/\\r?\\n/);\n            i = 0;\n\n          case 18:\n            if (!(i < lines.length - 1)) {\n              _context4.next = 26;\n              break;\n            }\n\n            l = lines[i].trim();\n\n            if (!(l.length > 0)) {\n              _context4.next = 23;\n              break;\n            }\n\n            _context4.next = 23;\n            return JSON.parse(l);\n\n          case 23:\n            i++;\n            _context4.next = 18;\n            break;\n\n          case 26:\n            buf = lines[lines.length - 1];\n\n          case 27:\n            _iteratorNormalCompletion2 = true;\n            _context4.next = 6;\n            break;\n\n          case 30:\n            _context4.next = 36;\n            break;\n\n          case 32:\n            _context4.prev = 32;\n            _context4.t0 = _context4[\"catch\"](4);\n            _didIteratorError2 = true;\n            _iteratorError2 = _context4.t0;\n\n          case 36:\n            _context4.prev = 36;\n            _context4.prev = 37;\n\n            if (!(!_iteratorNormalCompletion2 && _iterator2.return != null)) {\n              _context4.next = 41;\n              break;\n            }\n\n            _context4.next = 41;\n            return _awaitAsyncGenerator(_iterator2.return());\n\n          case 41:\n            _context4.prev = 41;\n\n            if (!_didIteratorError2) {\n              _context4.next = 44;\n              break;\n            }\n\n            throw _iteratorError2;\n\n          case 44:\n            return _context4.finish(41);\n\n          case 45:\n            return _context4.finish(36);\n\n          case 46:\n            buf += decoder.decode();\n            buf = buf.trim();\n\n            if (!(buf.length !== 0)) {\n              _context4.next = 51;\n              break;\n            }\n\n            _context4.next = 51;\n            return JSON.parse(buf);\n\n          case 51:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[4, 32, 36, 46], [37,, 41, 45]]);\n  }));\n\n  return function ndjson(_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n/**\n * Stream to AsyncIterable\n *\n * @template TChunk\n * @param {ReadableStream<TChunk> | NodeReadableStream | null} source\n * @returns {AsyncIterable<TChunk>}\n */\n\n\nvar fromStream = function fromStream(source) {\n  // Workaround for https://github.com/node-fetch/node-fetch/issues/766\n  if (isNodeReadableStream(source)) {\n    var iter = source[Symbol.asyncIterator]();\n    return _defineProperty({}, Symbol.asyncIterator, function () {\n      return {\n        next: iter.next.bind(iter),\n        return: function _return(value) {\n          source.destroy();\n\n          if (typeof iter.return === 'function') {\n            return iter.return();\n          }\n\n          return Promise.resolve({\n            done: true,\n            value: value\n          });\n        }\n      };\n    });\n  }\n\n  if (isWebReadableStream(source)) {\n    var reader = source.getReader();\n    return _wrapAsyncGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5() {\n      var _ref6, done, value;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n\n            case 1:\n              if (!true) {\n                _context5.next = 14;\n                break;\n              }\n\n              _context5.next = 4;\n              return _awaitAsyncGenerator(reader.read());\n\n            case 4:\n              _ref6 = _context5.sent;\n              done = _ref6.done;\n              value = _ref6.value;\n\n              if (!done) {\n                _context5.next = 9;\n                break;\n              }\n\n              return _context5.abrupt(\"return\");\n\n            case 9:\n              if (!value) {\n                _context5.next = 12;\n                break;\n              }\n\n              _context5.next = 12;\n              return value;\n\n            case 12:\n              _context5.next = 1;\n              break;\n\n            case 14:\n              _context5.prev = 14;\n              reader.releaseLock();\n              return _context5.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0,, 14, 17]]);\n    }))();\n  }\n\n  if (isAsyncIterable(source)) {\n    return source;\n  }\n\n  throw new TypeError('Body can\\'t be converted to AsyncIterable');\n};\n/**\n * Check if it's an AsyncIterable\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|AsyncIterable<TChunk>} value\n * @returns {value is AsyncIterable<TChunk>}\n */\n\n\nvar isAsyncIterable = function isAsyncIterable(value) {\n  return typeof value === 'object' && value !== null && typeof\n  /** @type {any} */\n  value[Symbol.asyncIterator] === 'function';\n};\n/**\n * Check for web readable stream\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|ReadableStream<TChunk>} value\n * @returns {value is ReadableStream<TChunk>}\n */\n\n\nvar isWebReadableStream = function isWebReadableStream(value) {\n  return value && typeof\n  /** @type {any} */\n  value.getReader === 'function';\n};\n/**\n * @param {any} value\n * @returns {value is NodeReadableStream}\n */\n\n\nvar isNodeReadableStream = function isNodeReadableStream(value) {\n  return Object.prototype.hasOwnProperty.call(value, 'readable') && Object.prototype.hasOwnProperty.call(value, 'writable');\n};\n\nHTTP.HTTPError = HTTPError;\nHTTP.TimeoutError = TimeoutError;\nHTTP.streamToAsyncIterator = fromStream;\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\n\nHTTP.post = function (resource, options) {\n  return new HTTP(options).post(resource, options);\n};\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\n\n\nHTTP.get = function (resource, options) {\n  return new HTTP(options).get(resource, options);\n};\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\n\n\nHTTP.put = function (resource, options) {\n  return new HTTP(options).put(resource, options);\n};\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\n\n\nHTTP.delete = function (resource, options) {\n  return new HTTP(options).delete(resource, options);\n};\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\n\n\nHTTP.options = function (resource, options) {\n  return new HTTP(options).options(resource, options);\n};\n\nmodule.exports = HTTP;","map":null,"metadata":{},"sourceType":"script"}