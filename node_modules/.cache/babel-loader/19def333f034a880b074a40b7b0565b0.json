{"ast":null,"code":"'use strict';\n\nvar _slicedToArray = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar textDecoder = new TextDecoder();\n\nfunction decodeVarint(bytes, offset) {\n  var v = 0;\n\n  for (var shift = 0;; shift += 7) {\n    if (shift >= 64) {\n      throw new Error('protobuf: varint overflow');\n    }\n\n    if (offset >= bytes.length) {\n      throw new Error('protobuf: unexpected end of data');\n    }\n\n    var b = bytes[offset++];\n    v += shift < 28 ? (b & 127) << shift : (b & 127) * Math.pow(2, shift);\n\n    if (b < 128) {\n      break;\n    }\n  }\n\n  return [v, offset];\n}\n\nfunction decodeBytes(bytes, offset) {\n  var byteLen;\n\n  var _decodeVarint = decodeVarint(bytes, offset);\n\n  var _decodeVarint2 = _slicedToArray(_decodeVarint, 2);\n\n  byteLen = _decodeVarint2[0];\n  offset = _decodeVarint2[1];\n  var postOffset = offset + byteLen;\n\n  if (byteLen < 0 || postOffset < 0) {\n    throw new Error('protobuf: invalid length');\n  }\n\n  if (postOffset > bytes.length) {\n    throw new Error('protobuf: unexpected end of data');\n  }\n\n  return [bytes.subarray(offset, postOffset), postOffset];\n}\n\nfunction decodeKey(bytes, index) {\n  var wire;\n\n  var _decodeVarint3 = decodeVarint(bytes, index);\n\n  var _decodeVarint4 = _slicedToArray(_decodeVarint3, 2);\n\n  wire = _decodeVarint4[0];\n  index = _decodeVarint4[1];\n  return [wire & 7, wire >> 3, index];\n}\n\nfunction decodeLink(bytes) {\n  var link = {};\n  var l = bytes.length;\n  var index = 0;\n\n  while (index < l) {\n    var wireType = void 0,\n        fieldNum = void 0;\n\n    var _decodeKey = decodeKey(bytes, index);\n\n    var _decodeKey2 = _slicedToArray(_decodeKey, 3);\n\n    wireType = _decodeKey2[0];\n    fieldNum = _decodeKey2[1];\n    index = _decodeKey2[2];\n\n    if (fieldNum === 1) {\n      if (link.Hash) {\n        throw new Error('protobuf: (PBLink) duplicate Hash section');\n      }\n\n      if (wireType !== 2) {\n        throw new Error(\"protobuf: (PBLink) wrong wireType (\".concat(wireType, \") for Hash\"));\n      }\n\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Name before Hash');\n      }\n\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Hash');\n      }\n\n      ;\n\n      var _decodeBytes = decodeBytes(bytes, index);\n\n      var _decodeBytes2 = _slicedToArray(_decodeBytes, 2);\n\n      link.Hash = _decodeBytes2[0];\n      index = _decodeBytes2[1];\n    } else if (fieldNum === 2) {\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Name section');\n      }\n\n      if (wireType !== 2) {\n        throw new Error(\"protobuf: (PBLink) wrong wireType (\".concat(wireType, \") for Name\"));\n      }\n\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Name');\n      }\n\n      var byts = void 0;\n\n      var _decodeBytes3 = decodeBytes(bytes, index);\n\n      var _decodeBytes4 = _slicedToArray(_decodeBytes3, 2);\n\n      byts = _decodeBytes4[0];\n      index = _decodeBytes4[1];\n      link.Name = textDecoder.decode(byts);\n    } else if (fieldNum === 3) {\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Tsize section');\n      }\n\n      if (wireType !== 0) {\n        throw new Error(\"protobuf: (PBLink) wrong wireType (\".concat(wireType, \") for Tsize\"));\n      }\n\n      ;\n\n      var _decodeVarint5 = decodeVarint(bytes, index);\n\n      var _decodeVarint6 = _slicedToArray(_decodeVarint5, 2);\n\n      link.Tsize = _decodeVarint6[0];\n      index = _decodeVarint6[1];\n    } else {\n      throw new Error(\"protobuf: (PBLink) invalid fieldNumber, expected 1, 2 or 3, got \".concat(fieldNum));\n    }\n  }\n\n  if (index > l) {\n    throw new Error('protobuf: (PBLink) unexpected end of data');\n  }\n\n  return link;\n}\n\nfunction decodeNode(bytes) {\n  var l = bytes.length;\n  var index = 0;\n  var links;\n  var linksBeforeData = false;\n  var data;\n\n  while (index < l) {\n    var wireType = void 0,\n        fieldNum = void 0;\n\n    var _decodeKey3 = decodeKey(bytes, index);\n\n    var _decodeKey4 = _slicedToArray(_decodeKey3, 3);\n\n    wireType = _decodeKey4[0];\n    fieldNum = _decodeKey4[1];\n    index = _decodeKey4[2];\n\n    if (wireType !== 2) {\n      throw new Error(\"protobuf: (PBNode) invalid wireType, expected 2, got \".concat(wireType));\n    }\n\n    if (fieldNum === 1) {\n      if (data) {\n        throw new Error('protobuf: (PBNode) duplicate Data section');\n      }\n\n      ;\n\n      var _decodeBytes5 = decodeBytes(bytes, index);\n\n      var _decodeBytes6 = _slicedToArray(_decodeBytes5, 2);\n\n      data = _decodeBytes6[0];\n      index = _decodeBytes6[1];\n\n      if (links) {\n        linksBeforeData = true;\n      }\n    } else if (fieldNum === 2) {\n      if (linksBeforeData) {\n        throw new Error('protobuf: (PBNode) duplicate Links section');\n      } else if (!links) {\n        links = [];\n      }\n\n      var byts = void 0;\n\n      var _decodeBytes7 = decodeBytes(bytes, index);\n\n      var _decodeBytes8 = _slicedToArray(_decodeBytes7, 2);\n\n      byts = _decodeBytes8[0];\n      index = _decodeBytes8[1];\n      links.push(decodeLink(byts));\n    } else {\n      throw new Error(\"protobuf: (PBNode) invalid fieldNumber, expected 1 or 2, got \".concat(fieldNum));\n    }\n  }\n\n  if (index > l) {\n    throw new Error('protobuf: (PBNode) unexpected end of data');\n  }\n\n  var node = {};\n\n  if (data) {\n    node.Data = data;\n  }\n\n  node.Links = links || [];\n  return node;\n}\n\nexports.decodeNode = decodeNode;","map":null,"metadata":{},"sourceType":"script"}