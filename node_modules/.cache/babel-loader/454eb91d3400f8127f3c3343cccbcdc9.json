{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar toUrlSearchParams = require('../../../lib/to-url-search-params.js');\n\nvar utils = require('./utils.js');\n\nfunction createLs(client) {\n  function ls() {\n    return _ls.apply(this, arguments);\n  }\n\n  function _ls() {\n    _ls = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var options,\n          stat,\n          headers,\n          timeout,\n          signal,\n          response,\n          _ref,\n          RemoteServices,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              stat = options.stat, headers = options.headers, timeout = options.timeout, signal = options.signal;\n              _context.next = 4;\n              return client.post('pin/remote/service/ls', {\n                timeout: timeout,\n                signal: signal,\n                headers: headers,\n                searchParams: stat === true ? toUrlSearchParams.toUrlSearchParams({\n                  stat: stat\n                }) : undefined\n              });\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              _ref = _context.sent;\n              RemoteServices = _ref.RemoteServices;\n              return _context.abrupt(\"return\", RemoteServices.map(utils.decodeRemoteService));\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _ls.apply(this, arguments);\n  }\n\n  return ls;\n}\n\nexports.createLs = createLs;","map":null,"metadata":{},"sourceType":"script"}