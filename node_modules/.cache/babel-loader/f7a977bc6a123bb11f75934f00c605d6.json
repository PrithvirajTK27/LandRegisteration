{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\src\\\\views\\\\viewImage.js\";\nimport React, { Component } from 'react';\nimport Land from \"../artifacts/Land.json\";\nimport getWeb3 from \"../getWeb3\";\nimport { DrizzleProvider } from '@drizzle/react-plugin';\nimport { Spinner } from 'react-bootstrap';\nimport { LoadingContainer, AccountData, ContractData, ContractForm } from 'drizzle-react-components';\nimport \"../index.css\"; // reactstrap components\n\nimport { Button, ButtonGroup, Card, CardHeader, CardBody, CardTitle, DropdownToggle, DropdownMenu, DropdownItem, UncontrolledDropdown, Label, FormGroup, Input, Table, Row, Col, UncontrolledTooltip } from \"reactstrap\";\nvar drizzleOptions = {\n  contracts: [Land]\n};\nvar verified;\nvar row = [];\nvar rowsIpfs = [];\n\nvar viewImage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(viewImage, _Component);\n\n  function viewImage(props) {\n    var _this;\n\n    _classCallCheck(this, viewImage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(viewImage).call(this, props));\n\n    _this.viewImage = function (landId) {\n      alert(landId);\n\n      _this.props.history.push({\n        pathname: '/viewImage'\n      });\n    };\n\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var web3, accounts, networkId, deployedNetwork, instance, currentAddress, registered, count, rowsArea, rowsCity, rowsState, rowsSt, rowsPrice, rowsPID, rowsSurvey, rowsIpfs, rowsDocs, i, landImg, document;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //For refreshing page only once\n              if (!window.location.hash) {\n                window.location = window.location + '#loaded';\n                window.location.reload();\n              }\n\n              _context.prev = 1;\n              _context.next = 4;\n              return getWeb3();\n\n            case 4:\n              web3 = _context.sent;\n              _context.next = 7;\n              return web3.eth.getAccounts();\n\n            case 7:\n              accounts = _context.sent;\n              _context.next = 10;\n              return web3.eth.net.getId();\n\n            case 10:\n              networkId = _context.sent;\n              deployedNetwork = Land.networks[networkId];\n              instance = new web3.eth.Contract(Land.abi, deployedNetwork && deployedNetwork.address);\n              _context.next = 15;\n              return web3.currentProvider.selectedAddress;\n\n            case 15:\n              currentAddress = _context.sent;\n              console.log(currentAddress);\n\n              _this.setState({\n                LandInstance: instance,\n                web3: web3,\n                account: accounts[0]\n              });\n\n              _context.next = 20;\n              return _this.state.LandInstance.methods.isVerified(currentAddress).call();\n\n            case 20:\n              verified = _context.sent;\n              console.log(verified);\n\n              _this.setState({\n                verified: verified\n              });\n\n              registered = true;\n\n              _this.setState({\n                registered: registered\n              });\n\n              _context.next = 27;\n              return _this.state.LandInstance.methods.getLandsCount().call();\n\n            case 27:\n              count = _context.sent;\n              count = parseInt(count);\n              console.log(typeof count);\n              console.log(count); //this.setState({count:count});\n\n              rowsArea = [];\n              rowsCity = [];\n              rowsState = [];\n              rowsSt = [];\n              rowsPrice = [];\n              rowsPID = [];\n              rowsSurvey = [];\n              rowsIpfs = [];\n              rowsDocs = [];\n\n              for (i = 1; i < count + 1; i++) {\n                rowsArea.push(React.createElement(ContractData, {\n                  contract: \"Land\",\n                  method: \"getArea\",\n                  methodArgs: [i, {\n                    from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\"\n                  }],\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 113\n                  },\n                  __self: this\n                }));\n                rowsCity.push(React.createElement(ContractData, {\n                  contract: \"Land\",\n                  method: \"getCity\",\n                  methodArgs: [i, {\n                    from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\"\n                  }],\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 114\n                  },\n                  __self: this\n                }));\n                rowsState.push(React.createElement(ContractData, {\n                  contract: \"Land\",\n                  method: \"getState\",\n                  methodArgs: [i, {\n                    from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\"\n                  }],\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 115\n                  },\n                  __self: this\n                }));\n                rowsSt.push(React.createElement(ContractData, {\n                  contract: \"Land\",\n                  method: \"getStatus\",\n                  methodArgs: [i, {\n                    from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\"\n                  }],\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 116\n                  },\n                  __self: this\n                }));\n                rowsPrice.push(React.createElement(ContractData, {\n                  contract: \"Land\",\n                  method: \"getPrice\",\n                  methodArgs: [i, {\n                    from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\"\n                  }],\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 117\n                  },\n                  __self: this\n                }));\n                rowsPID.push(React.createElement(ContractData, {\n                  contract: \"Land\",\n                  method: \"getPID\",\n                  methodArgs: [i, {\n                    from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\"\n                  }],\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 118\n                  },\n                  __self: this\n                }));\n                rowsSurvey.push(React.createElement(ContractData, {\n                  contract: \"Land\",\n                  method: \"getSurveyNumber\",\n                  methodArgs: [i, {\n                    from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\"\n                  }],\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 119\n                  },\n                  __self: this\n                })); // rowsIpfs.push((<ContractData contract=\"Land\" method=\"getImage\"  methodArgs={[i, { from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\" }]} />));\n              }\n\n              i = 1;\n\n            case 42:\n              if (!(i < count + 1)) {\n                _context.next = 55;\n                break;\n              }\n\n              _context.next = 45;\n              return _this.state.LandInstance.methods.getImage(i).call();\n\n            case 45:\n              landImg = _context.sent;\n              rowsIpfs.push(landImg);\n              _context.next = 49;\n              return _this.state.LandInstance.methods.getDocument(i).call();\n\n            case 49:\n              document = _context.sent;\n              rowsDocs.push(document); // row.push(<> <Col xs=\"6\"><Card style={{textAlign: \"center\"}}>\n              //   <CardHeader><CardTitle><h2>Land {i}</h2></CardTitle></CardHeader>\n              // <CardBody><div><img src={`https://ipfs.io/ipfs/${landImg}`} alt=\"\" width=\"90%\" height=\"90%\" style={{marginBottom:\"10px\"}}/><p>Area: {rowsArea[i-1]}</p><p>City: {rowsCity[i-1]}</p><p>State: {rowsState[i-1]}</p><p>PID: {rowsPID[i-1]}</p><p>Price: {rowsPrice[i-1]}</p> \n              // </div></CardBody></Card></Col></>)\n\n              row.push(React.createElement(Col, {\n                xs: \"6\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 133\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                class: \"post-module\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 135\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                class: \"thumbnail\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 137\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                class: \"date\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 138\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                class: \"day\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 139\n                },\n                __self: this\n              }, i)), React.createElement(\"img\", {\n                src: \"https://ipfs.io/ipfs/\".concat(landImg),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 140\n                },\n                __self: this\n              })), React.createElement(\"div\", {\n                class: \"post-content\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 143\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                class: \"category\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 144\n                },\n                __self: this\n              }, \"Photos\"), React.createElement(\"h1\", {\n                class: \"title\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 145\n                },\n                __self: this\n              }, rowsArea[i - 1], \" Sq. m.\"), React.createElement(\"h2\", {\n                class: \"sub_title\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 146\n                },\n                __self: this\n              }, rowsCity[i - 1], \", \", rowsState[i - 1]), React.createElement(\"p\", {\n                class: \"description\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 147\n                },\n                __self: this\n              }, \"PID: \", rowsPID[i - 1], React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 147\n                },\n                __self: this\n              }), \" Survey No.: \", rowsSurvey[i - 1]), React.createElement(\"div\", {\n                class: \"post-meta\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 148\n                },\n                __self: this\n              }, React.createElement(\"span\", {\n                class: \"timestamp\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 148\n                },\n                __self: this\n              }, \"Price: \\u20B9 \", rowsPrice[i - 1])), React.createElement(\"div\", {\n                class: \"post-meta\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 149\n                },\n                __self: this\n              }, React.createElement(\"span\", {\n                class: \"timestamp\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 149\n                },\n                __self: this\n              }, \"View Verified Land  \", React.createElement(\"a\", {\n                href: \"https://ipfs.io/ipfs/\".concat(document),\n                target: \"_blank\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 149\n                },\n                __self: this\n              }, \"Document\")))))));\n\n            case 52:\n              i++;\n              _context.next = 42;\n              break;\n\n            case 55:\n              console.log(row);\n              _context.next = 62;\n              break;\n\n            case 58:\n              _context.prev = 58;\n              _context.t0 = _context[\"catch\"](1);\n              // Catch any errors for any of the above operations.\n              alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n              console.error(_context.t0);\n\n            case 62:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[1, 58]]);\n    }));\n    _this.state = {\n      LandInstance: undefined,\n      account: null,\n      web3: null,\n      flag: null,\n      verified: '',\n      registered: '',\n      count: 0,\n      id: ''\n    };\n    return _this;\n  }\n\n  _createClass(viewImage, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.state.web3) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, React.createElement(Spinner, {\n          animation: \"border\",\n          variant: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }))));\n      }\n\n      if (!this.state.registered || !this.state.verified) {\n        return React.createElement(\"div\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, React.createElement(Col, {\n          xs: \"6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, React.createElement(CardBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, \"You are not verified to view this page\")))))));\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(DrizzleProvider, {\n        options: drizzleOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(LoadingContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, row)))));\n    }\n  }]);\n\n  return viewImage;\n}(Component);\n\nexport default viewImage;","map":{"version":3,"sources":["C:\\Users\\prith\\Desktop\\New folder (5)\\starter_kit-master\\LandRegisteration\\src\\views\\viewImage.js"],"names":["React","Component","Land","getWeb3","DrizzleProvider","Spinner","LoadingContainer","AccountData","ContractData","ContractForm","Button","ButtonGroup","Card","CardHeader","CardBody","CardTitle","DropdownToggle","DropdownMenu","DropdownItem","UncontrolledDropdown","Label","FormGroup","Input","Table","Row","Col","UncontrolledTooltip","drizzleOptions","contracts","verified","row","rowsIpfs","viewImage","props","landId","alert","history","push","pathname","componentDidMount","window","location","hash","reload","web3","eth","getAccounts","accounts","net","getId","networkId","deployedNetwork","networks","instance","Contract","abi","address","currentProvider","selectedAddress","currentAddress","console","log","setState","LandInstance","account","state","methods","isVerified","call","registered","getLandsCount","count","parseInt","rowsArea","rowsCity","rowsState","rowsSt","rowsPrice","rowsPID","rowsSurvey","rowsDocs","i","from","getImage","landImg","getDocument","document","error","undefined","flag","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Land from \"../artifacts/Land.json\";\nimport getWeb3 from \"../getWeb3\";\nimport { DrizzleProvider } from '@drizzle/react-plugin';\nimport { Spinner  } from 'react-bootstrap';\nimport {\n  LoadingContainer,\n  AccountData,\n  ContractData,\n  ContractForm\n} from 'drizzle-react-components';\nimport \"../index.css\";\n\n// reactstrap components\nimport {\n  Button,\n  ButtonGroup,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Label,\n  FormGroup,\n  Input,\n  Table,\n  Row,\n  Col,\n  UncontrolledTooltip,\n} from \"reactstrap\";\n\n\nconst drizzleOptions = {\n  contracts: [Land]\n}\n\nvar verified;\nvar row = [];\nvar rowsIpfs = [];\n\nclass viewImage extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      LandInstance: undefined,\n      account: null,\n      web3: null,\n      flag: null,\n      verified: '',\n      registered: '',\n      count: 0,\n      id: '',\n    }\n  }\n\n  viewImage = (landId) => {\n    alert(landId);\n    this.props.history.push({\n        pathname: '/viewImage',\n      })\n}\n\n  componentDidMount = async () => {\n    //For refreshing page only once\n    if (!window.location.hash) {\n      window.location = window.location + '#loaded';\n      window.location.reload();\n    }\n\n    try {\n      //Get network provider and web3 instance\n      const web3 = await getWeb3();\n\n      const accounts = await web3.eth.getAccounts();\n\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = Land.networks[networkId];\n      const instance = new web3.eth.Contract(\n        Land.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      const currentAddress = await web3.currentProvider.selectedAddress;\n      console.log(currentAddress);\n      this.setState({ LandInstance: instance, web3: web3, account: accounts[0] });\n      verified = await this.state.LandInstance.methods.isVerified(currentAddress).call();\n      console.log(verified);\n      this.setState({ verified: verified });\n      var registered = true;\n      this.setState({ registered: registered });\n\n      var count = await this.state.LandInstance.methods.getLandsCount().call();\n      count = parseInt(count);\n      console.log(typeof (count));\n      console.log(count);\n      //this.setState({count:count});\n\n      var rowsArea = [];\n      var rowsCity = [];\n      var rowsState = [];\n      var rowsSt = [];\n      var rowsPrice = [];\n      var rowsPID = [];\n      var rowsSurvey = [];\n      var rowsIpfs = [];\n      var rowsDocs = [];\n\n      for (var i = 1; i < count + 1; i++) {\n        rowsArea.push(<ContractData contract=\"Land\" method=\"getArea\" methodArgs={[i, { from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\" }]} />);\n        rowsCity.push(<ContractData contract=\"Land\" method=\"getCity\" methodArgs={[i, { from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\" }]} />);\n        rowsState.push(<ContractData contract=\"Land\" method=\"getState\" methodArgs={[i, { from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\" }]} />);\n        rowsSt.push(<ContractData contract=\"Land\" method=\"getStatus\" methodArgs={[i, { from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\" }]} />);\n        rowsPrice.push(<ContractData contract=\"Land\" method=\"getPrice\" methodArgs={[i, { from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\" }]} />);\n        rowsPID.push(<ContractData contract=\"Land\" method=\"getPID\" methodArgs={[i, { from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\" }]} />);\n        rowsSurvey.push(<ContractData contract=\"Land\" method=\"getSurveyNumber\" methodArgs={[i, { from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\" }]} />);\n      // rowsIpfs.push((<ContractData contract=\"Land\" method=\"getImage\"  methodArgs={[i, { from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\" }]} />));\n      }\n      \n\n      for (var i = 1; i < count + 1; i++) {\n        var landImg = await this.state.LandInstance.methods.getImage(i).call();\n        rowsIpfs.push(landImg)\n        var document = await this.state.LandInstance.methods.getDocument(i).call();\n        rowsDocs.push(document);\n        // row.push(<> <Col xs=\"6\"><Card style={{textAlign: \"center\"}}>\n        //   <CardHeader><CardTitle><h2>Land {i}</h2></CardTitle></CardHeader>\n        // <CardBody><div><img src={`https://ipfs.io/ipfs/${landImg}`} alt=\"\" width=\"90%\" height=\"90%\" style={{marginBottom:\"10px\"}}/><p>Area: {rowsArea[i-1]}</p><p>City: {rowsCity[i-1]}</p><p>State: {rowsState[i-1]}</p><p>PID: {rowsPID[i-1]}</p><p>Price: {rowsPrice[i-1]}</p> \n        // </div></CardBody></Card></Col></>)\n        row.push(<Col xs=\"6\">\n     \n        <div class=\"post-module\">\n          \n          <div class=\"thumbnail\">\n            <div class=\"date\">\n            <div class=\"day\">{i}</div>\n            </div><img src={`https://ipfs.io/ipfs/${landImg}`}/>\n          </div>\n          \n          <div class=\"post-content\">\n            <div class=\"category\">Photos</div>\n            <h1 class=\"title\">{rowsArea[i-1]} Sq. m.</h1>\n            <h2 class=\"sub_title\">{rowsCity[i-1]}, {rowsState[i-1]}</h2>\n            <p class=\"description\">PID: {rowsPID[i-1]}<br/> Survey No.: {rowsSurvey[i-1]}</p>\n      <div class=\"post-meta\"><span class=\"timestamp\">Price: ₹ {rowsPrice[i-1]}</span></div>\n      <div class=\"post-meta\"><span class=\"timestamp\">View Verified Land  <a href={`https://ipfs.io/ipfs/${document}`} target=\"_blank\">Document</a></span></div>\n          </div>\n        </div>\n      </Col>)\n      }\n      console.log(row)\n\n      \n\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  render() {\n    if (!this.state.web3) {\n      return (\n        <div>\n          <div>\n            <h1>\n              <Spinner animation=\"border\" variant=\"primary\" />\n            </h1>\n          </div>\n\n        </div>\n      );\n    }\n\n    if (!this.state.registered || !this.state.verified) {\n      return (\n        <div className=\"content\">\n          <div>\n            <Row>\n              <Col xs=\"6\">\n                <Card>\n                  <CardBody>\n                    <h1>\n                      You are not verified to view this page\n                                        </h1>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n\n        </div>\n      );\n    }\n\n\n    return (\n      <>\n        <div className=\"content\">\n          <DrizzleProvider options={drizzleOptions}>\n            <LoadingContainer>\n\n              <Row>\n\n                {row}\n\n              </Row>\n            </LoadingContainer>\n          </DrizzleProvider>\n          \n        </div>\n      </>\n\n    );\n\n  }\n}\n\nexport default viewImage;"]},"metadata":{},"sourceType":"module"}