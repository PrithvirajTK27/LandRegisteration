{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar empty = new Uint8Array(0);\n\nvar toHex = function toHex(d) {\n  return d.reduce(function (hex, byte) {\n    return hex + byte.toString(16).padStart(2, '0');\n  }, '');\n};\n\nvar fromHex = function fromHex(hex) {\n  var hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(function (b) {\n    return parseInt(b, 16);\n  })) : empty;\n};\n\nvar equals = function equals(aa, bb) {\n  if (aa === bb) return true;\n\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n\n  for (var ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar coerce = function coerce(o) {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') return o;\n  if (o instanceof ArrayBuffer) return new Uint8Array(o);\n\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n\n  throw new Error('Unknown type, must be binary type');\n};\n\nvar isBinary = function isBinary(o) {\n  return o instanceof ArrayBuffer || ArrayBuffer.isView(o);\n};\n\nvar fromString = function fromString(str) {\n  return new TextEncoder().encode(str);\n};\n\nvar toString = function toString(b) {\n  return new TextDecoder().decode(b);\n};\n\nexports.coerce = coerce;\nexports.empty = empty;\nexports.equals = equals;\nexports.fromHex = fromHex;\nexports.fromString = fromString;\nexports.isBinary = isBinary;\nexports.toHex = toHex;\nexports.toString = toString;","map":null,"metadata":{},"sourceType":"script"}