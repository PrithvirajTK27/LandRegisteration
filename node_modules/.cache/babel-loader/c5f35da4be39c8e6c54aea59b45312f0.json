{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\src\\\\components\\\\FixedPlugin\\\\FixedPlugin.js\";\n\n/*!\n\n=========================================================\n* Black Dashboard React v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\"; // reactstrap components\n\nimport { Button, Dropdown, DropdownToggle, Badge } from \"reactstrap\";\nimport { ThemeContext, themes } from \"../../contexts/ThemeContext\";\nimport { backgroundColors } from \"../../contexts/BackgroundColorContext\";\n\nfunction FixedPlugin(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      dropDownIsOpen = _React$useState2[0],\n      setdropDownIsOpen = _React$useState2[1];\n\n  var handleClick = function handleClick() {\n    setdropDownIsOpen(!dropDownIsOpen);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"fixed-plugin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    isOpen: dropDownIsOpen,\n    toggle: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(DropdownToggle, {\n    tag: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-cog fa-2x\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), React.createElement(\"ul\", {\n    className: \"dropdown-menu show\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"header-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"SIDEBAR BACKGROUND\"), React.createElement(\"li\", {\n    className: \"adjustments-line\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"badge-colors text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Badge, {\n    color: \"primary\",\n    className: props.bgColor === backgroundColors.primary ? \"active\" : \"\",\n    onClick: function onClick() {\n      props.handleBgClick(backgroundColors.primary);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), \" \", React.createElement(Badge, {\n    color: \"info\",\n    className: props.bgColor === backgroundColors.blue ? \"active\" : \"\",\n    onClick: function onClick() {\n      props.handleBgClick(backgroundColors.blue);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), \" \", React.createElement(Badge, {\n    color: \"success\",\n    className: props.bgColor === backgroundColors.green ? \"active\" : \"\",\n    onClick: function onClick() {\n      props.handleBgClick(backgroundColors.green);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), \" \")), React.createElement(\"li\", {\n    className: \"adjustments-line text-center color-change\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(ThemeContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, function (_ref) {\n    var changeTheme = _ref.changeTheme;\n    return React.createElement(React.Fragment, null, React.createElement(\"span\", {\n      className: \"color-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"LIGHT MODE\"), \" \", React.createElement(Badge, {\n      className: \"light-badge mr-2\",\n      onClick: function onClick() {\n        return changeTheme(themes.light);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), \" \", React.createElement(Badge, {\n      className: \"dark-badge ml-2\",\n      onClick: function onClick() {\n        return changeTheme(themes.dark);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), \" \", React.createElement(\"span\", {\n      className: \"color-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"DARK MODE\"), \" \");\n  })), React.createElement(\"li\", {\n    className: \"button-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"default\",\n    block: true,\n    className: \"btn-round\",\n    outline: true,\n    href: \"https://demos.creative-tim.com/black-dashboard-react/#/documentation/tutorial\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Documentation\")))));\n}\n\nexport default FixedPlugin;","map":{"version":3,"sources":["C:\\Users\\prith\\Desktop\\New folder (5)\\starter_kit-master\\LandRegisteration\\src\\components\\FixedPlugin\\FixedPlugin.js"],"names":["React","Button","Dropdown","DropdownToggle","Badge","ThemeContext","themes","backgroundColors","FixedPlugin","props","useState","dropDownIsOpen","setdropDownIsOpen","handleClick","bgColor","primary","handleBgClick","blue","green","changeTheme","light","dark"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Black Dashboard React v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Button, Dropdown, DropdownToggle, Badge } from \"reactstrap\";\nimport { ThemeContext, themes } from \"../../contexts/ThemeContext\";\nimport { backgroundColors } from \"../../contexts/BackgroundColorContext\";\n\nfunction FixedPlugin(props) {\n  const [dropDownIsOpen, setdropDownIsOpen] = React.useState(false);\n  const handleClick = () => {\n    setdropDownIsOpen(!dropDownIsOpen);\n  };\n  return (\n    <div className=\"fixed-plugin\">\n      <Dropdown isOpen={dropDownIsOpen} toggle={handleClick}>\n        <DropdownToggle tag=\"div\">\n          <i className=\"fa fa-cog fa-2x\" />\n        </DropdownToggle>\n        <ul className=\"dropdown-menu show\">\n          <li className=\"header-title\">SIDEBAR BACKGROUND</li>\n          <li className=\"adjustments-line\">\n            <div className=\"badge-colors text-center\">\n              <Badge\n                color=\"primary\"\n                className={\n                  props.bgColor === backgroundColors.primary ? \"active\" : \"\"\n                }\n                onClick={() => {\n                  props.handleBgClick(backgroundColors.primary);\n                }}\n              />{\" \"}\n              <Badge\n                color=\"info\"\n                className={\n                  props.bgColor === backgroundColors.blue ? \"active\" : \"\"\n                }\n                onClick={() => {\n                  props.handleBgClick(backgroundColors.blue);\n                }}\n              />{\" \"}\n              <Badge\n                color=\"success\"\n                className={\n                  props.bgColor === backgroundColors.green ? \"active\" : \"\"\n                }\n                onClick={() => {\n                  props.handleBgClick(backgroundColors.green);\n                }}\n              />{\" \"}\n            </div>\n          </li>\n          <li className=\"adjustments-line text-center color-change\">\n            <ThemeContext.Consumer>\n              {({ changeTheme }) => (\n                <>\n                  <span className=\"color-label\">LIGHT MODE</span>{\" \"}\n                  <Badge\n                    className=\"light-badge mr-2\"\n                    onClick={() => changeTheme(themes.light)}\n                  />{\" \"}\n                  <Badge\n                    className=\"dark-badge ml-2\"\n                    onClick={() => changeTheme(themes.dark)}\n                  />{\" \"}\n                  <span className=\"color-label\">DARK MODE</span>{\" \"}\n                </>\n              )}\n            </ThemeContext.Consumer>\n          </li>\n          <li className=\"button-container\">\n            <Button\n              color=\"default\"\n              block\n              className=\"btn-round\"\n              outline\n              href=\"https://demos.creative-tim.com/black-dashboard-react/#/documentation/tutorial\"\n            >\n              Documentation\n            </Button>\n          </li>\n        </ul>\n      </Dropdown>\n    </div>\n  );\n}\n\nexport default FixedPlugin;\n"]},"metadata":{},"sourceType":"module"}