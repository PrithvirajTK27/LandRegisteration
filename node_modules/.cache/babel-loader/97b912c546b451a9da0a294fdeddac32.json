{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar _asyncIterator = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncIterator\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar normaliseInputMultiple_browser = require('./files/normalise-input-multiple.browser.js');\n\nvar modeToString = require('./mode-to-string.js');\n\nfunction multipartRequest(_x, _x2) {\n  return _multipartRequest.apply(this, arguments);\n}\n\nfunction _multipartRequest() {\n  _multipartRequest = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(source, abortController) {\n    var headers,\n        parts,\n        formData,\n        index,\n        total,\n        _iteratorNormalCompletion,\n        _didIteratorError,\n        _iteratorError,\n        _iterator,\n        _step,\n        _value,\n        _value2,\n        content,\n        path,\n        mode,\n        mtime,\n        fileSuffix,\n        type,\n        fieldName,\n        qs,\n        secs,\n        nsecs,\n        end,\n        _args = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            headers = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n            parts = [];\n            formData = new FormData();\n            index = 0;\n            total = 0;\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _context.prev = 7;\n            _iterator = _asyncIterator(normaliseInputMultiple_browser.normaliseInput(source));\n\n          case 9:\n            _context.next = 11;\n            return _iterator.next();\n\n          case 11:\n            _step = _context.sent;\n            _iteratorNormalCompletion = _step.done;\n            _context.next = 15;\n            return _step.value;\n\n          case 15:\n            _value = _context.sent;\n\n            if (_iteratorNormalCompletion) {\n              _context.next = 42;\n              break;\n            }\n\n            _value2 = _value, content = _value2.content, path = _value2.path, mode = _value2.mode, mtime = _value2.mtime;\n            fileSuffix = '';\n            type = content ? 'file' : 'dir';\n\n            if (index > 0) {\n              fileSuffix = \"-\".concat(index);\n            }\n\n            fieldName = type + fileSuffix;\n            qs = [];\n\n            if (mode !== null && mode !== undefined) {\n              qs.push(\"mode=\".concat(modeToString.modeToString(mode)));\n            }\n\n            if (mtime != null) {\n              secs = mtime.secs, nsecs = mtime.nsecs;\n              qs.push(\"mtime=\".concat(secs));\n\n              if (nsecs != null) {\n                qs.push(\"mtime-nsecs=\".concat(nsecs));\n              }\n            }\n\n            if (qs.length) {\n              fieldName = \"\".concat(fieldName, \"?\").concat(qs.join('&'));\n            }\n\n            if (!content) {\n              _context.next = 33;\n              break;\n            }\n\n            formData.set(fieldName, content, path != null ? encodeURIComponent(path) : undefined);\n            end = total + content.size;\n            parts.push({\n              name: path,\n              start: total,\n              end: end\n            });\n            total = end;\n            _context.next = 38;\n            break;\n\n          case 33:\n            if (!(path != null)) {\n              _context.next = 37;\n              break;\n            }\n\n            formData.set(fieldName, new File([''], encodeURIComponent(path), {\n              type: 'application/x-directory'\n            }));\n            _context.next = 38;\n            break;\n\n          case 37:\n            throw new Error('path or content or both must be set');\n\n          case 38:\n            index++;\n\n          case 39:\n            _iteratorNormalCompletion = true;\n            _context.next = 9;\n            break;\n\n          case 42:\n            _context.next = 48;\n            break;\n\n          case 44:\n            _context.prev = 44;\n            _context.t0 = _context[\"catch\"](7);\n            _didIteratorError = true;\n            _iteratorError = _context.t0;\n\n          case 48:\n            _context.prev = 48;\n            _context.prev = 49;\n\n            if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n              _context.next = 53;\n              break;\n            }\n\n            _context.next = 53;\n            return _iterator.return();\n\n          case 53:\n            _context.prev = 53;\n\n            if (!_didIteratorError) {\n              _context.next = 56;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 56:\n            return _context.finish(53);\n\n          case 57:\n            return _context.finish(48);\n\n          case 58:\n            return _context.abrupt(\"return\", {\n              total: total,\n              parts: parts,\n              headers: headers,\n              body: formData\n            });\n\n          case 59:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[7, 44, 48, 58], [49,, 53, 57]]);\n  }));\n  return _multipartRequest.apply(this, arguments);\n}\n\nexports.multipartRequest = multipartRequest;","map":null,"metadata":{},"sourceType":"script"}