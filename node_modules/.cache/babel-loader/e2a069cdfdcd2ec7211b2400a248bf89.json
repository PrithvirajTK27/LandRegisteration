{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _objectSpread = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar cid = require('multiformats/cid');\n\nvar multipartRequest = require('ipfs-core-utils/multipart-request');\n\nvar configure = require('../../lib/configure.js');\n\nvar toUrlSearchParams = require('../../lib/to-url-search-params.js');\n\nvar abortSignal = require('../../lib/abort-signal.js');\n\nvar createAppendData = configure.configure(function (api) {\n  function appendData(_x, _x2) {\n    return _appendData.apply(this, arguments);\n  }\n\n  function _appendData() {\n    _appendData = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(cid$1, data) {\n      var options,\n          controller,\n          signal,\n          res,\n          _ref,\n          Hash,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n              controller = new AbortController();\n              signal = abortSignal.abortSignal(controller.signal, options.signal);\n              _context.t0 = api;\n              _context.t1 = _objectSpread;\n              _context.t2 = {\n                signal: signal,\n                searchParams: toUrlSearchParams.toUrlSearchParams(_objectSpread({\n                  arg: \"\".concat(cid$1)\n                }, options))\n              };\n              _context.next = 8;\n              return multipartRequest.multipartRequest([data], controller, options.headers);\n\n            case 8:\n              _context.t3 = _context.sent;\n              _context.t4 = (0, _context.t1)(_context.t2, _context.t3);\n              _context.next = 12;\n              return _context.t0.post.call(_context.t0, 'object/patch/append-data', _context.t4);\n\n            case 12:\n              res = _context.sent;\n              _context.next = 15;\n              return res.json();\n\n            case 15:\n              _ref = _context.sent;\n              Hash = _ref.Hash;\n              return _context.abrupt(\"return\", cid.CID.parse(Hash));\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _appendData.apply(this, arguments);\n  }\n\n  return appendData;\n});\nexports.createAppendData = createAppendData;","map":null,"metadata":{},"sourceType":"script"}