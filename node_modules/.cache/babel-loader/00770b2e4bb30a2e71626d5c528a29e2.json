{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\src\\\\components\\\\ThemeWrapper\\\\ThemeWrapper.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { ThemeContext, themes } from \"../../contexts/ThemeContext\";\nexport default function ThemeContextWrapper(props) {\n  var _useState = useState(themes.light),\n      _useState2 = _slicedToArray(_useState, 2),\n      theme = _useState2[0],\n      setTheme = _useState2[1];\n\n  function changeTheme(theme) {\n    setTheme(theme);\n  }\n\n  useEffect(function () {\n    switch (theme) {\n      case themes.light:\n        document.body.classList.add(\"white-content\");\n        break;\n\n      case themes.dark:\n      default:\n        document.body.classList.remove(\"white-content\");\n        break;\n    }\n  }, [theme]);\n  return React.createElement(ThemeContext.Provider, {\n    value: {\n      theme: theme,\n      changeTheme: changeTheme\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.children);\n}","map":{"version":3,"sources":["C:\\Users\\prith\\Desktop\\New folder (5)\\starter_kit-master\\LandRegisteration\\src\\components\\ThemeWrapper\\ThemeWrapper.js"],"names":["React","useState","useEffect","ThemeContext","themes","ThemeContextWrapper","props","light","theme","setTheme","changeTheme","document","body","classList","add","dark","remove","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,MAAvB,QAAqC,6BAArC;AAEA,eAAe,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA,kBACvBL,QAAQ,CAACG,MAAM,CAACG,KAAR,CADe;AAAA;AAAA,MAC1CC,KAD0C;AAAA,MACnCC,QADmC;;AAGjD,WAASC,WAAT,CAAqBF,KAArB,EAA4B;AAC1BC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;;AAEDN,EAAAA,SAAS,CAAC,YAAM;AACd,YAAQM,KAAR;AACE,WAAKJ,MAAM,CAACG,KAAZ;AACEI,QAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,eAA5B;AACA;;AACF,WAAKV,MAAM,CAACW,IAAZ;AACA;AACEJ,QAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBG,MAAxB,CAA+B,eAA/B;AACA;AAPJ;AASD,GAVQ,EAUN,CAACR,KAAD,CAVM,CAAT;AAYA,SACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAEA,KAAT;AAAgBE,MAAAA,WAAW,EAAEA;AAA7B,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACW,QADT,CADF;AAKD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ThemeContext, themes } from \"../../contexts/ThemeContext\";\n\nexport default function ThemeContextWrapper(props) {\n  const [theme, setTheme] = useState(themes.light);\n\n  function changeTheme(theme) {\n    setTheme(theme);\n  }\n\n  useEffect(() => {\n    switch (theme) {\n      case themes.light:\n        document.body.classList.add(\"white-content\");\n        break;\n      case themes.dark:\n      default:\n        document.body.classList.remove(\"white-content\");\n        break;\n    }\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={{ theme: theme, changeTheme: changeTheme }}>\n      {props.children}\n    </ThemeContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}