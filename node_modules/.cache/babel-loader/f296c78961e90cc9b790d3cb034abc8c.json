{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _objectSpread = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread\");\n\nvar _awaitAsyncGenerator = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/wrapAsyncGenerator\");\n\nvar _asyncIterator = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncIterator\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar cid = require('multiformats/cid');\n\nvar configure = require('../lib/configure.js');\n\nvar normaliseInput = require('ipfs-core-utils/pins/normalise-input');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nvar createAddAll = configure.configure(function (api) {\n  function addAll(_x) {\n    return _addAll.apply(this, arguments);\n  }\n\n  function _addAll() {\n    _addAll = _wrapAsyncGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(source) {\n      var options,\n          _iteratorNormalCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          _value,\n          _value3,\n          path,\n          recursive,\n          metadata,\n          res,\n          _iteratorNormalCompletion2,\n          _didIteratorError2,\n          _iteratorError2,\n          _iterator2,\n          _step2,\n          _value2,\n          pin,\n          _iteratorNormalCompletion3,\n          _didIteratorError3,\n          _iteratorError3,\n          _iterator3,\n          _step3,\n          cid$1,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _context.prev = 3;\n              _iterator = _asyncIterator(normaliseInput.normaliseInput(source));\n\n            case 5:\n              _context.next = 7;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 7:\n              _step = _context.sent;\n              _iteratorNormalCompletion = _step.done;\n              _context.next = 11;\n              return _awaitAsyncGenerator(_step.value);\n\n            case 11:\n              _value = _context.sent;\n\n              if (_iteratorNormalCompletion) {\n                _context.next = 82;\n                break;\n              }\n\n              _value3 = _value, path = _value3.path, recursive = _value3.recursive, metadata = _value3.metadata;\n              _context.next = 16;\n              return _awaitAsyncGenerator(api.post('pin/add', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams.toUrlSearchParams(_objectSpread({}, options, {\n                  arg: path,\n                  recursive: recursive,\n                  metadata: metadata ? JSON.stringify(metadata) : undefined,\n                  stream: true\n                })),\n                headers: options.headers\n              }));\n\n            case 16:\n              res = _context.sent;\n              _iteratorNormalCompletion2 = true;\n              _didIteratorError2 = false;\n              _context.prev = 19;\n              _iterator2 = _asyncIterator(res.ndjson());\n\n            case 21:\n              _context.next = 23;\n              return _awaitAsyncGenerator(_iterator2.next());\n\n            case 23:\n              _step2 = _context.sent;\n              _iteratorNormalCompletion2 = _step2.done;\n              _context.next = 27;\n              return _awaitAsyncGenerator(_step2.value);\n\n            case 27:\n              _value2 = _context.sent;\n\n              if (_iteratorNormalCompletion2) {\n                _context.next = 63;\n                break;\n              }\n\n              pin = _value2;\n\n              if (!pin.Pins) {\n                _context.next = 58;\n                break;\n              }\n\n              _iteratorNormalCompletion3 = true;\n              _didIteratorError3 = false;\n              _iteratorError3 = undefined;\n              _context.prev = 34;\n              _iterator3 = pin.Pins[Symbol.iterator]();\n\n            case 36:\n              if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {\n                _context.next = 43;\n                break;\n              }\n\n              cid$1 = _step3.value;\n              _context.next = 40;\n              return cid.CID.parse(cid$1);\n\n            case 40:\n              _iteratorNormalCompletion3 = true;\n              _context.next = 36;\n              break;\n\n            case 43:\n              _context.next = 49;\n              break;\n\n            case 45:\n              _context.prev = 45;\n              _context.t0 = _context[\"catch\"](34);\n              _didIteratorError3 = true;\n              _iteratorError3 = _context.t0;\n\n            case 49:\n              _context.prev = 49;\n              _context.prev = 50;\n\n              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                _iterator3.return();\n              }\n\n            case 52:\n              _context.prev = 52;\n\n              if (!_didIteratorError3) {\n                _context.next = 55;\n                break;\n              }\n\n              throw _iteratorError3;\n\n            case 55:\n              return _context.finish(52);\n\n            case 56:\n              return _context.finish(49);\n\n            case 57:\n              return _context.abrupt(\"continue\", 60);\n\n            case 58:\n              _context.next = 60;\n              return cid.CID.parse(pin);\n\n            case 60:\n              _iteratorNormalCompletion2 = true;\n              _context.next = 21;\n              break;\n\n            case 63:\n              _context.next = 69;\n              break;\n\n            case 65:\n              _context.prev = 65;\n              _context.t1 = _context[\"catch\"](19);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context.t1;\n\n            case 69:\n              _context.prev = 69;\n              _context.prev = 70;\n\n              if (!(!_iteratorNormalCompletion2 && _iterator2.return != null)) {\n                _context.next = 74;\n                break;\n              }\n\n              _context.next = 74;\n              return _awaitAsyncGenerator(_iterator2.return());\n\n            case 74:\n              _context.prev = 74;\n\n              if (!_didIteratorError2) {\n                _context.next = 77;\n                break;\n              }\n\n              throw _iteratorError2;\n\n            case 77:\n              return _context.finish(74);\n\n            case 78:\n              return _context.finish(69);\n\n            case 79:\n              _iteratorNormalCompletion = true;\n              _context.next = 5;\n              break;\n\n            case 82:\n              _context.next = 88;\n              break;\n\n            case 84:\n              _context.prev = 84;\n              _context.t2 = _context[\"catch\"](3);\n              _didIteratorError = true;\n              _iteratorError = _context.t2;\n\n            case 88:\n              _context.prev = 88;\n              _context.prev = 89;\n\n              if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                _context.next = 93;\n                break;\n              }\n\n              _context.next = 93;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 93:\n              _context.prev = 93;\n\n              if (!_didIteratorError) {\n                _context.next = 96;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 96:\n              return _context.finish(93);\n\n            case 97:\n              return _context.finish(88);\n\n            case 98:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 84, 88, 98], [19, 65, 69, 79], [34, 45, 49, 57], [50,, 52, 56], [70,, 74, 78], [89,, 93, 97]]);\n    }));\n    return _addAll.apply(this, arguments);\n  }\n\n  return addAll;\n});\nexports.createAddAll = createAddAll;","map":null,"metadata":{},"sourceType":"script"}