{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _objectSpread = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread\");\n\nvar _slicedToArray = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\n\nvar _awaitAsyncGenerator = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/wrapAsyncGenerator\");\n\nvar _asyncIterator = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncIterator\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar cid = require('multiformats/cid');\n\nvar objectToCamel = require('./lib/object-to-camel.js');\n\nvar configure = require('./lib/configure.js');\n\nvar multipartRequest = require('ipfs-core-utils/multipart-request');\n\nvar toUrlSearchParams = require('./lib/to-url-search-params.js');\n\nvar abortSignal = require('./lib/abort-signal.js');\n\nvar createAddAll = configure.configure(function (api) {\n  function addAll(_x) {\n    return _addAll.apply(this, arguments);\n  }\n\n  function _addAll() {\n    _addAll = _wrapAsyncGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(source) {\n      var options,\n          controller,\n          signal,\n          _ref,\n          headers,\n          body,\n          total,\n          parts,\n          _ref2,\n          _ref3,\n          progressFn,\n          onUploadProgress,\n          res,\n          _iteratorNormalCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          _value,\n          file,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              controller = new AbortController();\n              signal = abortSignal.abortSignal(controller.signal, options.signal);\n              _context.next = 5;\n              return _awaitAsyncGenerator(multipartRequest.multipartRequest(source, controller, options.headers));\n\n            case 5:\n              _ref = _context.sent;\n              headers = _ref.headers;\n              body = _ref.body;\n              total = _ref.total;\n              parts = _ref.parts;\n              _ref2 = typeof options.progress === 'function' ? createProgressHandler(total, parts, options.progress) : [undefined, undefined], _ref3 = _slicedToArray(_ref2, 2), progressFn = _ref3[0], onUploadProgress = _ref3[1];\n              _context.next = 13;\n              return _awaitAsyncGenerator(api.post('add', {\n                searchParams: toUrlSearchParams.toUrlSearchParams(_objectSpread({\n                  'stream-channels': true\n                }, options, {\n                  progress: Boolean(progressFn)\n                })),\n                onUploadProgress: onUploadProgress,\n                signal: signal,\n                headers: headers,\n                body: body\n              }));\n\n            case 13:\n              res = _context.sent;\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _context.prev = 16;\n              _iterator = _asyncIterator(res.ndjson());\n\n            case 18:\n              _context.next = 20;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 20:\n              _step = _context.sent;\n              _iteratorNormalCompletion = _step.done;\n              _context.next = 24;\n              return _awaitAsyncGenerator(_step.value);\n\n            case 24:\n              _value = _context.sent;\n\n              if (_iteratorNormalCompletion) {\n                _context.next = 37;\n                break;\n              }\n\n              file = _value;\n              file = objectToCamel.objectToCamel(file);\n\n              if (!(file.hash !== undefined)) {\n                _context.next = 33;\n                break;\n              }\n\n              _context.next = 31;\n              return toCoreInterface(file);\n\n            case 31:\n              _context.next = 34;\n              break;\n\n            case 33:\n              if (progressFn) {\n                progressFn(file.bytes || 0, file.name);\n              }\n\n            case 34:\n              _iteratorNormalCompletion = true;\n              _context.next = 18;\n              break;\n\n            case 37:\n              _context.next = 43;\n              break;\n\n            case 39:\n              _context.prev = 39;\n              _context.t0 = _context[\"catch\"](16);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 43:\n              _context.prev = 43;\n              _context.prev = 44;\n\n              if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                _context.next = 48;\n                break;\n              }\n\n              _context.next = 48;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 48:\n              _context.prev = 48;\n\n              if (!_didIteratorError) {\n                _context.next = 51;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 51:\n              return _context.finish(48);\n\n            case 52:\n              return _context.finish(43);\n\n            case 53:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[16, 39, 43, 53], [44,, 48, 52]]);\n    }));\n    return _addAll.apply(this, arguments);\n  }\n\n  return addAll;\n});\n\nvar createProgressHandler = function createProgressHandler(total, parts, progress) {\n  return parts ? [undefined, createOnUploadProgress(total, parts, progress)] : [progress, undefined];\n};\n\nvar createOnUploadProgress = function createOnUploadProgress(size, parts, progress) {\n  var index = 0;\n  var count = parts.length;\n  return function (_ref4) {\n    var loaded = _ref4.loaded,\n        total = _ref4.total;\n    var position = Math.floor(loaded / total * size);\n\n    while (index < count) {\n      var _parts$index = parts[index],\n          start = _parts$index.start,\n          end = _parts$index.end,\n          name = _parts$index.name;\n\n      if (position < end) {\n        progress(position - start, name);\n        break;\n      } else {\n        progress(end - start, name);\n        index += 1;\n      }\n    }\n  };\n};\n\nfunction toCoreInterface(_ref5) {\n  var name = _ref5.name,\n      hash = _ref5.hash,\n      size = _ref5.size,\n      mode = _ref5.mode,\n      mtime = _ref5.mtime,\n      mtimeNsecs = _ref5.mtimeNsecs;\n  var output = {\n    path: name,\n    cid: cid.CID.parse(hash),\n    size: parseInt(size)\n  };\n\n  if (mode != null) {\n    output.mode = parseInt(mode, 8);\n  }\n\n  if (mtime != null) {\n    output.mtime = {\n      secs: mtime,\n      nsecs: mtimeNsecs || 0\n    };\n  }\n\n  return output;\n}\n\nexports.createAddAll = createAddAll;","map":null,"metadata":{},"sourceType":"script"}