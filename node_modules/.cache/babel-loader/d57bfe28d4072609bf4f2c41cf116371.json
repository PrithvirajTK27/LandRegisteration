{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _slicedToArray = require(\"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\LandRegisteration\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar bytes = require('../bytes.js');\n\nvar varint = require('../varint.js');\n\nvar create = function create(code, digest) {\n  var size = digest.byteLength;\n  var sizeOffset = varint.encodingLength(code);\n  var digestOffset = sizeOffset + varint.encodingLength(size);\n  var bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\n\nvar decode = function decode(multihash) {\n  var bytes$1 = bytes.coerce(multihash);\n\n  var _varint$decode = varint.decode(bytes$1),\n      _varint$decode2 = _slicedToArray(_varint$decode, 2),\n      code = _varint$decode2[0],\n      sizeOffset = _varint$decode2[1];\n\n  var _varint$decode3 = varint.decode(bytes$1.subarray(sizeOffset)),\n      _varint$decode4 = _slicedToArray(_varint$decode3, 2),\n      size = _varint$decode4[0],\n      digestOffset = _varint$decode4[1];\n\n  var digest = bytes$1.subarray(sizeOffset + digestOffset);\n\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n\n  return new Digest(code, size, digest, bytes$1);\n};\n\nvar equals = function equals(a, b) {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && bytes.equals(a.bytes, b.bytes);\n  }\n};\n\nvar Digest = function Digest(code, size, digest, bytes) {\n  _classCallCheck(this, Digest);\n\n  this.code = code;\n  this.size = size;\n  this.digest = digest;\n  this.bytes = bytes;\n};\n\nexports.Digest = Digest;\nexports.create = create;\nexports.decode = decode;\nexports.equals = equals;","map":null,"metadata":{},"sourceType":"script"}